<?xml version='1.0' encoding='utf-8'?>
<?xml-stylesheet type='text/xsl' href='http://www.osgi.org/www/obr2html.xsl'?>

<repository lastmodified='20150225112248.247' name='Amdatu dependenciess'>
  <resource id='com.google.gson/2.3.1' presentationname='Gson' symbolicname='com.google.gson' uri='com.google.gson/com.google.gson-2.3.1.jar' version='2.3.1'>
    <description>
      Google Gson library
    </description>
    <size>
      210856
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Gson'/>
      <p n='symbolicname' v='com.google.gson'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.annotations'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.reflect'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.stream'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.internal'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.google.gson.internal.bind'/>
      <p n='version' t='version' v='2.3.1'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5)(ee=JavaSE-1.6)(ee=JavaSE-1.7)(ee=JavaSE-1.8))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5)(ee=JavaSE-1.6)(ee=JavaSE-1.7)(ee=JavaSE-1.8))
    </require>
  </resource>
  <resource id='com.springsource.com.thoughtworks.xstream/1.3.1' presentationname='Thoughtworks XStream' symbolicname='com.springsource.com.thoughtworks.xstream' uri='com.springsource.com.thoughtworks.xstream/com.springsource.com.thoughtworks.xstream-1.3.1.jar' version='1.3.1'>
    <size>
      437920
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Thoughtworks XStream'/>
      <p n='symbolicname' v='com.springsource.com.thoughtworks.xstream'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream'/>
      <p n='uses' v='com.thoughtworks.xstream.alias,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.core,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.alias'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.annotations'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.io'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters.basic'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.io'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters.collections'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters.enums'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.basic,com.thoughtworks.xstream.converters.collections,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters.extended'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.basic,com.thoughtworks.xstream.converters.collections,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,javax.xml.datatype'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters.javabean'/>
      <p n='uses' v='com.thoughtworks.xstream.alias,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.converters.reflection'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.basic,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper,net.sf.cglib.proxy'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.core'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.alias,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.io,com.thoughtworks.xstream.io.path,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.core.util'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.io,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.converters'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io.binary'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.io'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io.copy'/>
      <p n='uses' v='com.thoughtworks.xstream.io'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io.json'/>
      <p n='uses' v='com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.io,com.thoughtworks.xstream.io.xml,javax.xml.stream,org.codehaus.jettison.mapped'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io.path'/>
      <p n='uses' v='com.thoughtworks.xstream.converters,com.thoughtworks.xstream.io'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io.xml'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.core.util,com.thoughtworks.xstream.io,com.thoughtworks.xstream.io.xml.xppdom,javax.xml.namespace,javax.xml.stream,javax.xml.transform.sax,nu.xom,org.dom4j,org.dom4j.io,org.jdom,org.w3c.dom,org.xml.sax,org.xmlpull.v1'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.io.xml.xppdom'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.mapper'/>
      <p n='uses' v='com.thoughtworks.xstream.alias,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.converters.reflection,com.thoughtworks.xstream.core'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='com.thoughtworks.xstream.persistence'/>
      <p n='uses' v='com.thoughtworks.xstream,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.mapper'/>
      <p n='version' t='version' v='1.3.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.swing.plaf)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.swing.plaf ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=2.2.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[2.2.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=nu.xom)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package nu.xom ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jettison)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jettison ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jettison.mapped)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jettison.mapped ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j)(version&gt;=1.6.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.dom4j ;version=[1.6.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.io)(version&gt;=1.6.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.dom4j.io ;version=[1.6.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.dom4j.tree)(version&gt;=1.6.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.dom4j.tree ;version=[1.6.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jdom ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jdom.input)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jdom.input ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time.format)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time.format ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.mxp1)(version&gt;=1.1.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.xmlpull.mxp1 ;version=[1.1.4,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=1.1.4)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.xmlpull.v1 ;version=[1.1.4,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.activation/1.1.1' presentationname='Java Activation API' symbolicname='com.springsource.javax.activation' uri='com.springsource.javax.activation/com.springsource.javax.activation-1.1.1.jar' version='1.1.1'>
    <size>
      70182
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Activation API'/>
      <p n='symbolicname' v='com.springsource.javax.activation'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.activation'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
  </resource>
  <resource id='com.springsource.javax.ejb/3.0.0' presentationname='Java EJB API' symbolicname='com.springsource.javax.ejb' uri='com.springsource.javax.ejb/com.springsource.javax.ejb-3.0.0.jar' version='3.0.0'>
    <size>
      34176
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java EJB API'/>
      <p n='symbolicname' v='com.springsource.javax.ejb'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb'/>
      <p n='uses' v='javax.transaction,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb.spi'/>
      <p n='uses' v='javax.ejb'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.interceptor'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.handler)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.handler ;version=[1.1.0,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.jms/1.1.0' presentationname='Java Messaging System API' symbolicname='com.springsource.javax.jms' uri='com.springsource.javax.jms/com.springsource.javax.jms-1.1.0.jar' version='1.1.0'>
    <size>
      26178
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Messaging System API'/>
      <p n='symbolicname' v='com.springsource.javax.jms'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jms'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction.xa ;version=[1.0.1,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.management.j2ee/1.0.1' presentationname='J2EE Application Management Specification' symbolicname='com.springsource.javax.management.j2ee' uri='com.springsource.javax.management.j2ee/com.springsource.javax.management.j2ee-1.0.1.jar' version='1.0.1'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      20790
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='J2EE Application Management Specification'/>
      <p n='symbolicname' v='com.springsource.javax.management.j2ee'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.management.j2ee'/>
      <p n='uses' v='javax.ejb,javax.management'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.management.j2ee.statistics'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.ejb ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
  </resource>
  <resource id='com.springsource.javax.resource/1.5.0' presentationname='Java Resource API' symbolicname='com.springsource.javax.resource' uri='com.springsource.javax.resource/com.springsource.javax.resource-1.5.0.jar' version='1.5.0'>
    <size>
      37807
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Resource API'/>
      <p n='symbolicname' v='com.springsource.javax.resource'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource'/>
      <p n='uses' v='javax.naming'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.cci'/>
      <p n='uses' v='javax.resource'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi'/>
      <p n='uses' v='javax.resource,javax.resource.spi.endpoint,javax.resource.spi.work,javax.security.auth,javax.transaction.xa'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi.endpoint'/>
      <p n='uses' v='javax.resource,javax.resource.spi,javax.transaction.xa'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi.security'/>
      <p n='uses' v='javax.resource.spi'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.resource.spi.work'/>
      <p n='uses' v='javax.resource,javax.transaction.xa'/>
      <p n='version' t='version' v='1.5.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.transaction.xa ;version=[1.0.1,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.bind/2.2.0' presentationname='Java XML Binding API' symbolicname='com.springsource.javax.xml.bind' uri='com.springsource.javax.xml.bind/com.springsource.javax.xml.bind-2.2.0.jar' version='2.2.0'>
    <size>
      106281
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java XML Binding API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.bind'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind'/>
      <p n='uses' v='javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.namespace,javax.xml.stream,javax.xml.transform,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation'/>
      <p n='uses' v='javax.xml.bind,javax.xml.parsers,javax.xml.transform,javax.xml.transform.dom,org.w3c.dom'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.annotation.adapters'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.attachment'/>
      <p n='uses' v='javax.activation'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.helpers'/>
      <p n='uses' v='javax.xml.bind,javax.xml.bind.annotation.adapters,javax.xml.bind.attachment,javax.xml.stream,javax.xml.transform,javax.xml.transform.stream,javax.xml.validation,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.bind.util'/>
      <p n='uses' v='javax.xml.bind,javax.xml.transform.sax,org.xml.sax'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.datatype)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.datatype ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=1.0.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream ;version=[1.0.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.crypto/1.4.3' presentationname='Java XML Cryptography (JSR 105)' symbolicname='com.springsource.javax.xml.crypto' uri='com.springsource.javax.xml.crypto/com.springsource.javax.xml.crypto-1.4.3.jar' version='1.4.3'>
    <size>
      454441
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java XML Cryptography (JSR 105)'/>
      <p n='symbolicname' v='com.springsource.javax.xml.crypto'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.crypto'/>
      <p n='uses' v='javax.xml.crypto.dsig.keyinfo'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.crypto.dom'/>
      <p n='uses' v='javax.xml.crypto,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.crypto.dsig'/>
      <p n='uses' v='javax.xml.crypto,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.crypto.dsig.dom'/>
      <p n='uses' v='javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.crypto.dsig.keyinfo'/>
      <p n='uses' v='javax.xml.crypto'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.crypto.dsig.spec'/>
      <p n='uses' v='javax.xml.crypto'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.algorithms'/>
      <p n='uses' v='org.apache.xml.security.exceptions,org.apache.xml.security.signature,org.apache.xml.security.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.algorithms.implementations'/>
      <p n='uses' v='org.apache.xml.security.algorithms,org.apache.xml.security.signature,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.c14n'/>
      <p n='uses' v='javax.xml.parsers,org.apache.xml.security.exceptions,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.c14n.helper'/>
      <p n='uses' v='org.apache.xml.security.c14n,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.c14n.implementations'/>
      <p n='uses' v='javax.xml.parsers,org.apache.xml.security.c14n,org.apache.xml.security.signature,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.encryption'/>
      <p n='uses' v='org.apache.commons.logging,org.apache.xml.security.c14n,org.apache.xml.security.exceptions,org.apache.xml.security.keys,org.apache.xml.security.signature,org.apache.xml.security.transforms,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.exceptions'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys'/>
      <p n='uses' v='javax.crypto,org.apache.xml.security.encryption,org.apache.xml.security.exceptions,org.apache.xml.security.keys.content,org.apache.xml.security.keys.content.keyvalues,org.apache.xml.security.keys.keyresolver,org.apache.xml.security.keys.storage,org.apache.xml.security.transforms,org.apache.xml.security.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.content'/>
      <p n='uses' v='org.apache.xml.security.exceptions,org.apache.xml.security.keys.content.keyvalues,org.apache.xml.security.keys.content.x509,org.apache.xml.security.transforms,org.apache.xml.security.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.content.keyvalues'/>
      <p n='uses' v='org.apache.xml.security.exceptions,org.apache.xml.security.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.content.x509'/>
      <p n='uses' v='org.apache.xml.security.exceptions,org.apache.xml.security.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.keyresolver'/>
      <p n='uses' v='javax.crypto,org.apache.xml.security.exceptions,org.apache.xml.security.keys.storage,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.keyresolver.implementations'/>
      <p n='uses' v='javax.crypto,javax.xml.parsers,org.apache.xml.security.c14n,org.apache.xml.security.exceptions,org.apache.xml.security.keys.content,org.apache.xml.security.keys.keyresolver,org.apache.xml.security.keys.storage,org.apache.xml.security.signature,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.storage'/>
      <p n='uses' v='org.apache.xml.security.exceptions'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.keys.storage.implementations'/>
      <p n='uses' v='org.apache.xml.security.keys.storage'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.resource'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.resource.schema'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.signature'/>
      <p n='uses' v='javax.crypto,javax.xml.parsers,org.apache.xml.security.algorithms,org.apache.xml.security.c14n,org.apache.xml.security.exceptions,org.apache.xml.security.keys,org.apache.xml.security.transforms,org.apache.xml.security.utils,org.apache.xml.security.utils.resolver,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.transforms'/>
      <p n='uses' v='javax.xml.parsers,org.apache.xml.security.c14n,org.apache.xml.security.exceptions,org.apache.xml.security.signature,org.apache.xml.security.utils,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.transforms.implementations'/>
      <p n='uses' v='javax.xml.transform,org.apache.xml.dtm,org.apache.xml.security.c14n,org.apache.xml.security.signature,org.apache.xml.security.transforms,org.apache.xpath,org.apache.xpath.functions,org.apache.xpath.objects,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.transforms.params'/>
      <p n='uses' v='org.apache.xml.security.exceptions,org.apache.xml.security.transforms,org.apache.xml.security.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.utils'/>
      <p n='uses' v='javax.xml.transform,org.apache.xml.security.algorithms,org.apache.xml.security.exceptions,org.apache.xml.security.transforms.implementations,org.apache.xml.utils,org.apache.xpath,org.apache.xpath.objects,org.w3c.dom,org.w3c.dom.traversal,org.xml.sax'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.utils.resolver'/>
      <p n='uses' v='org.apache.xml.security.exceptions,org.apache.xml.security.signature,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xml.security.utils.resolver.implementations'/>
      <p n='uses' v='org.apache.xml.security.signature,org.apache.xml.security.utils.resolver,org.apache.xml.utils,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jcp.xml.dsig.internal'/>
      <p n='uses' v='javax.crypto'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.jcp.xml.dsig.internal.dom'/>
      <p n='uses' v='javax.xml.crypto,javax.xml.crypto.dom,javax.xml.crypto.dsig,javax.xml.crypto.dsig.dom,javax.xml.crypto.dsig.keyinfo,javax.xml.crypto.dsig.spec,org.apache.xml.security.c14n,org.apache.xml.security.signature,org.w3c.dom'/>
      <p n='version' t='version' v='1.4.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.x500)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.x500 ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.dtm)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.dtm ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xml.utils)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xml.utils ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xpath)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xpath ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xpath.compiler)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xpath.compiler ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xpath.functions)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xpath.functions ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xpath.objects)(version&gt;=2.7.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xpath.objects ;version=[2.7.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.traversal)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.traversal ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.rpc/1.1.0.v20110517' presentationname='Java XML RPC API' symbolicname='com.springsource.javax.xml.rpc' uri='com.springsource.javax.xml.rpc/com.springsource.javax.xml.rpc-1.1.0.jar' version='1.1.0.v20110517'>
    <size>
      32374
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java XML RPC API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.rpc'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.messaging'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.rpc.encoding,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.encoding'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler.soap'/>
      <p n='uses' v='javax.xml.rpc.handler,javax.xml.soap'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.holders'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.server'/>
      <p n='uses' v='javax.servlet,javax.servlet.http,javax.xml.rpc,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.soap'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.soap'/>
      <p n='version' t='version' v='1.1.0.v20110517'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.4.0)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet ;version=[2.4.0,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.4.0)(!(version&gt;=3.1.0)))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http ;version=[2.4.0,3.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.soap ;version=[1.3.0,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.soap/1.3.0' presentationname='Java SOAP API' symbolicname='com.springsource.javax.xml.soap' uri='com.springsource.javax.xml.soap/com.springsource.javax.xml.soap-1.3.0.jar' version='1.3.0'>
    <size>
      19496
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java SOAP API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.soap'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.soap'/>
      <p n='uses' v='javax.activation,javax.xml.namespace,javax.xml.transform,org.w3c.dom'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.activation)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.activation ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.springsource.javax.xml.ws/2.1.1' presentationname='Java Web Services API' symbolicname='com.springsource.javax.xml.ws' uri='com.springsource.javax.xml.ws/com.springsource.javax.xml.ws-2.1.1.jar' version='2.1.1'>
    <size>
      37401
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Java Web Services API'/>
      <p n='symbolicname' v='com.springsource.javax.xml.ws'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws'/>
      <p n='uses' v='javax.xml.bind,javax.xml.namespace,javax.xml.transform,javax.xml.ws.handler,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws.handler'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.ws'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws.handler.soap'/>
      <p n='uses' v='javax.xml.bind,javax.xml.namespace,javax.xml.soap'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws.http'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws.soap'/>
      <p n='uses' v='javax.xml.soap'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws.spi'/>
      <p n='uses' v='javax.xml.bind,javax.xml.namespace,javax.xml.transform,javax.xml.ws,javax.xml.ws.handler,javax.xml.ws.wsaddressing'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.ws.wsaddressing'/>
      <p n='uses' v='javax.xml.bind,javax.xml.namespace,javax.xml.transform,org.w3c.dom'/>
      <p n='version' t='version' v='2.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=2.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation ;version=[2.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.soap)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.xml.soap ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='com.springsource.net.sf.cglib/2.2.0' presentationname='CGLIB Code Generation Library' symbolicname='com.springsource.net.sf.cglib' uri='com.springsource.net.sf.cglib/com.springsource.net.sf.cglib-2.2.0.jar' version='2.2.0'>
    <size>
      326877
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='CGLIB Code Generation Library'/>
      <p n='symbolicname' v='com.springsource.net.sf.cglib'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.asm'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.asm.signature'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.beans'/>
      <p n='uses' v='net.sf.cglib.asm,net.sf.cglib.core'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.core'/>
      <p n='uses' v='net.sf.cglib.asm'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.proxy'/>
      <p n='uses' v='net.sf.cglib.asm,net.sf.cglib.core,net.sf.cglib.reflect'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.reflect'/>
      <p n='uses' v='net.sf.cglib.asm,net.sf.cglib.core'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.transform'/>
      <p n='uses' v='net.sf.cglib.asm,net.sf.cglib.core,org.apache.tools.ant,org.apache.tools.ant.types'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.transform.impl'/>
      <p n='uses' v='net.sf.cglib.asm,net.sf.cglib.core,net.sf.cglib.transform'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='net.sf.cglib.util'/>
      <p n='uses' v='net.sf.cglib.asm,net.sf.cglib.core'/>
      <p n='version' t='version' v='2.2.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types ;version=[1.7.0,2.0.0)
    </require>
  </resource>
  <resource id='com.springsource.org.junit/4.11.0' presentationname='JUnit' symbolicname='com.springsource.org.junit' uri='com.springsource.org.junit/com.springsource.org.junit-4.11.0.jar' version='4.11.0'>
    <size>
      293826
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JUnit'/>
      <p n='symbolicname' v='com.springsource.org.junit'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.extensions'/>
      <p n='uses' v='junit.framework'/>
      <p n='version' t='version' v='3.8.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.framework'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.manipulation,org.junit.runner.notification'/>
      <p n='version' t='version' v='3.8.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.runner'/>
      <p n='uses' v='junit.framework'/>
      <p n='version' t='version' v='3.8.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='junit.textui'/>
      <p n='uses' v='junit.framework,junit.runner'/>
      <p n='version' t='version' v='3.8.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hamcrest'/>
      <p n='uses' v='org.hamcrest.core,org.hamcrest.internal'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hamcrest.core'/>
      <p n='uses' v='org.hamcrest'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.hamcrest.internal'/>
      <p n='uses' v='org.hamcrest'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit'/>
      <p n='uses' v='org.hamcrest,org.junit.internal,org.junit.runners'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental'/>
      <p n='uses' v='org.junit.runner,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.categories'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.manipulation,org.junit.runners,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.max'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.notification,org.junit.runners'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.results'/>
      <p n='uses' v='org.hamcrest,org.junit.runner'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.runners'/>
      <p n='uses' v='org.junit.runners,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.theories'/>
      <p n='uses' v='org.junit.experimental.theories.internal,org.junit.internal,org.junit.runners,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.theories.internal'/>
      <p n='uses' v='org.junit.experimental.theories,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.experimental.theories.suppliers'/>
      <p n='uses' v='org.junit.experimental.theories'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal'/>
      <p n='uses' v='org.hamcrest,org.junit,org.junit.runner,org.junit.runner.notification'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.builders'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.notification,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.matchers'/>
      <p n='uses' v='org.hamcrest'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.requests'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.manipulation'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners'/>
      <p n='uses' v='junit.framework,org.junit.runner,org.junit.runner.manipulation,org.junit.runner.notification'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners.model'/>
      <p n='uses' v='org.junit.internal,org.junit.runner,org.junit.runner.notification,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners.rules'/>
      <p n='uses' v='org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.internal.runners.statements'/>
      <p n='uses' v='org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.matchers'/>
      <p n='uses' v='org.hamcrest,org.hamcrest.core'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.rules'/>
      <p n='uses' v='org.hamcrest,org.junit.internal,org.junit.runner,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runner'/>
      <p n='uses' v='junit.framework,org.junit.internal,org.junit.runner.manipulation,org.junit.runner.notification,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runner.manipulation'/>
      <p n='uses' v='org.junit.runner'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runner.notification'/>
      <p n='uses' v='org.junit.runner'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runners'/>
      <p n='uses' v='org.junit.internal.runners,org.junit.internal.runners.model,org.junit.runner,org.junit.runner.manipulation,org.junit.runner.notification,org.junit.runners.model'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.junit.runners.model'/>
      <p n='uses' v='org.junit.internal.runners.model,org.junit.runner'/>
      <p n='version' t='version' v='4.11.0'/>
    </capability>
  </resource>
  <resource id='com.springsource.org.xmlpull/1.1.4.c' presentationname='XMLPULL V1 API' symbolicname='com.springsource.org.xmlpull' uri='com.springsource.org.xmlpull/com.springsource.org.xmlpull-1.1.4.jar' version='1.1.4.c'>
    <size>
      25220
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='XMLPULL V1 API'/>
      <p n='symbolicname' v='com.springsource.org.xmlpull'/>
      <p n='version' t='version' v='1.1.4.c'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xmlpull.mxp1'/>
      <p n='uses' v='org.xmlpull.v1'/>
      <p n='version' t='version' v='1.1.4.c'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.xmlpull.v1'/>
      <p n='version' t='version' v='1.1.4.c'/>
    </capability>
  </resource>
  <resource id='javax.annotation/1.1.0.v201105051105' presentationname='javax.annotation Bundle' symbolicname='javax.annotation' uri='javax.annotation/javax.annotation-1.1.0.jar' version='1.1.0.v201105051105'>
    <size>
      26453
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='javax.annotation Bundle'/>
      <p n='symbolicname' v='javax.annotation'/>
      <p n='version' t='version' v='1.1.0.v201105051105'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.security'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.annotation.sql'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.5))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.5))
    </require>
  </resource>
  <resource id='javax.jms-api/2.0.0' presentationname='JMS API' symbolicname='javax.jms-api' uri='javax.jms-api/javax.jms-api-2.0.0.jar' version='2.0.0'>
    <description>
      Java(TM) Message Service Specification
    </description>
    <size>
      62729
    </size>
    <license>
      https://glassfish.java.net/nonav/public/CDDL+GPL_1_1.html
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='JMS API'/>
      <p n='symbolicname' v='javax.jms-api'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jms'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jms.doc-files'/>
      <p n='version' t='version' v='2.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa
    </require>
  </resource>
  <resource id='javax.management.j2ee-api/1.1.1' presentationname='javax.management.j2ee API' symbolicname='javax.management.j2ee-api' uri='javax.management.j2ee-api/javax.management.j2ee-api-1.1.1.jar' version='1.1.1'>
    <description>
      Java(TM) Management 1.1 API Design Specification
    </description>
    <size>
      32526
    </size>
    <license>
      https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html
    </license>
    <documentation>
      https://glassfish.java.net
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='javax.management.j2ee API'/>
      <p n='symbolicname' v='javax.management.j2ee-api'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.management.j2ee.statistics'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.management.j2ee'/>
      <p n='uses' v='javax.ejb,javax.management'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=3.1.0)(!(version&gt;=3.2.98)))' multiple='false' name='package' optional='false'>
      Import package javax.ejb ;version=[3.1.0,3.2.98)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.j2ee)(version&gt;=1.1.1))' multiple='false' name='package' optional='false'>
      Import package javax.management.j2ee ;version=1.1.1
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.j2ee.statistics)(version&gt;=1.1.1))' multiple='false' name='package' optional='false'>
      Import package javax.management.j2ee.statistics ;version=1.1.1
    </require>
  </resource>
  <resource id='org.apache.activemq.activemq-blueprint/5.10.1' presentationname='activemq-blueprint' symbolicname='org.apache.activemq.activemq-blueprint' uri='org.apache.activemq.activemq-blueprint/org.apache.activemq.activemq-blueprint-5.10.1.jar' version='5.10.1'>
    <description>
      The ActiveMQ Message Broker and Client implementations
    </description>
    <size>
      8883
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='fragment'>
      <p n='host' v='org.apache.activemq.activemq-osgi'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='org.apache.activemq.activemq-osgi'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='activemq-blueprint'/>
      <p n='symbolicname' v='org.apache.activemq.activemq-blueprint'/>
      <p n='version' t='version' v='5.10.1'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=org.apache.activemq.activemq-osgi)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host org.apache.activemq.activemq-osgi
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xbean.blueprint.context.impl)(version&gt;=3.13.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.xbean.blueprint.context.impl ;version=[3.13.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.activemq.activemq-osgi/5.10.1' presentationname='activemq-osgi' symbolicname='org.apache.activemq.activemq-osgi' uri='org.apache.activemq.activemq-osgi/org.apache.activemq.activemq-osgi-5.10.1.jar' version='5.10.1'>
    <description>
      Puts together an ActiveMQ OSGi bundle
    </description>
    <size>
      11094371
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='service'>
      <p n='service' v='org.osgi.service.cm.ManagedServiceFactory'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='activemq-osgi'/>
      <p n='symbolicname' v='org.apache.activemq.activemq-osgi'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.vm'/>
      <p n='uses' v='org.apache.activemq.thread,org.apache.activemq.command,org.apache.activemq.transport,org.slf4j,org.apache.activemq,org.apache.activemq.wireformat,org.apache.activemq.broker,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.jaas'/>
      <p n='uses' v='javax.security.auth.callback,javax.security.auth.spi,javax.security.auth.login,javax.security.auth,org.slf4j,org.jasypt.properties,org.jasypt.encryption.pbe.config,org.jasypt.encryption,org.jasypt.encryption.pbe,javax.naming,javax.naming.directory'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.xbean'/>
      <p n='uses' v='org.apache.activemq.broker,org.apache.xbean.spring.context.impl,org.springframework.core.io,org.springframework.beans,org.springframework.context,org.apache.xbean.spring.context,org.springframework.beans.factory,org.springframework.beans.factory.xml,org.apache.activemq.spring,org.apache.activemq.util,org.slf4j,javax.annotation,org.apache.activemq.broker.scheduler,org.apache.activemq.store,org.apache.activemq.usage'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.leveldb.replicated.groups'/>
      <p n='uses' v='scala.reflect,scala.runtime,scala,scala.collection.immutable,org.slf4j,scala.collection.mutable,org.apache.zookeeper,org.codehaus.jackson.map,scala.collection.generic,scala.collection,org.codehaus.jackson.annotate,org.osgi.framework,org.apache.zookeeper.data,org.osgi.service.cm'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.xstream'/>
      <p n='uses' v='org.apache.activemq.wireformat,org.apache.activemq.command,org.apache.activemq.transport.util,com.thoughtworks.xstream'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.leveldb.replicated'/>
      <p n='uses' v='org.apache.activemq.broker,org.apache.activemq.store,scala.runtime,scala,org.apache.activemq.util,scala.collection.mutable,scala.collection,org.apache.activemq.leveldb.util,org.slf4j,org.apache.zookeeper,scala.collection.immutable,org.apache.activemq.leveldb,javax.management,org.apache.activemq.leveldb.replicated.groups,org.apache.activemq.broker.jmx,scala.reflect,org.apache.activemq.usage,org.codehaus.jackson.annotate,scala.collection.generic,org.apache.activemq.leveldb.replicated.dto,org.apache.activemq.command,javax.management.openmbean,sun.nio.ch,sun.misc'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.nio'/>
      <p n='uses' v='org.apache.activemq.transport.tcp,javax.net.ssl,org.apache.activemq.util,org.apache.activemq.command,org.slf4j,org.apache.activemq.openwire,org.apache.activemq.wireformat,javax.net,org.apache.activemq.thread,org.apache.activemq.broker,org.apache.activemq.transport'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.ws'/>
      <p n='uses' v='org.apache.activemq.command,org.slf4j,org.apache.activemq.broker,org.apache.activemq.transport,org.apache.activemq.transport.mqtt,org.apache.activemq.util,org.eclipse.jetty.websocket,org.apache.activemq.wireformat,org.apache.activemq.transport.stomp,javax.servlet,javax.servlet.http,org.eclipse.jetty.server,org.eclipse.jetty.servlet'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.discovery.http'/>
      <p n='uses' v='javax.servlet,org.slf4j,javax.servlet.http,org.eclipse.jetty.server,org.eclipse.jetty.servlet,org.eclipse.jetty.server.nio,org.apache.activemq,org.apache.activemq.transport.discovery,org.apache.activemq.command,org.apache.http.impl.client,org.apache.activemq.util,org.apache.http.client,org.apache.http.client.methods'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.leveldb.replicated.dto'/>
      <p n='uses' v='javax.xml.bind.annotation,org.codehaus.jackson.annotate'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.memory.list'/>
      <p n='uses' v='org.apache.activemq.memory.buffer,org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.filter'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.leveldb'/>
      <p n='uses' v='org.apache.activemq.leveldb,org.apache.activemq.leveldb.replicated,org.apache.activemq.store'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.discovery.simple'/>
      <p n='uses' v='org.apache.activemq.transport.discovery,org.apache.activemq.command,org.slf4j,org.apache.activemq.thread,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.jdbc'/>
      <p n='uses' v='javax.sql,org.apache.activemq.broker,org.apache.activemq.store,org.slf4j,org.apache.activemq.util,org.apache.derby.jdbc,org.apache.activemq,org.apache.activemq.command,org.apache.activemq.wireformat,org.apache.activemq.broker.region,org.apache.activemq.store.memory,org.apache.activemq.openwire,org.apache.activemq.store.jdbc.adapter,org.apache.activemq.usage,org.apache.activemq.management'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.disk.page'/>
      <p n='uses' v='org.apache.activemq.util,org.apache.activemq.store.kahadb.disk.util,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.discovery'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq,org.apache.activemq.util,org.apache.activemq.transport,org.slf4j,org.apache.activemq.transport.failover'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.wss'/>
      <p n='uses' v='org.apache.activemq.broker,org.apache.activemq.transport,org.apache.activemq.util,org.eclipse.jetty.server,org.apache.activemq.transport.ws'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.command.store.amq'/>
      <p n='uses' v='org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.disk'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.inteceptor'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.filter,org.apache.activemq.state,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.plugin.jaxb2_commons'/>
      <p n='uses' v='org.jvnet.jaxb2_commons.locator,org.jvnet.jaxb2_commons.lang,org.w3c.dom'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.multicast'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.transport.udp,org.apache.activemq.util,org.slf4j,org.apache.activemq.openwire,org.apache.activemq.wireformat,org.apache.activemq.transport'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.advisory'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.state,org.slf4j,org.apache.activemq.management,org.apache.activemq.broker.region,org.apache.activemq.broker,org.apache.activemq.usage,org.apache.activemq.util,org.apache.activemq.security,javax.jms,org.apache.activemq'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.schema.core'/>
      <p n='uses' v='org.jvnet.jaxb2_commons.locator.util,org.apache.activemq.plugin.jaxb2_commons,javax.xml.bind.annotation,org.jvnet.jaxb2_commons.locator,org.jvnet.jaxb2_commons.lang,javax.xml.bind.annotation.adapters,javax.xml.bind,javax.xml.namespace'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v10'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.pool'/>
      <p n='uses' v='org.apache.activemq.jms.pool,javax.jms,org.apache.activemq.transport,org.slf4j,org.apache.activemq,javax.transaction,org.apache.activemq.advisory,org.apache.activemq.jndi,javax.naming,org.apache.activemq.util,javax.annotation,org.springframework.beans.factory,javax.transaction.xa'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.cluster'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.broker,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.scheduler'/>
      <p n='uses' v='org.apache.activemq.broker.scheduler,org.apache.activemq.util,org.apache.activemq.store.kahadb.disk.util,org.apache.activemq.store.kahadb.disk.journal,org.apache.activemq.store.kahadb.disk.page,org.apache.activemq.store.kahadb.disk.index,javax.jms,org.slf4j,org.apache.activemq.broker,org.apache.activemq.store'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.jndi'/>
      <p n='uses' v='javax.naming,org.apache.activemq.command,javax.jms,org.apache.activemq,javax.naming.spi,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.jmx'/>
      <p n='uses' v='org.apache.activemq.broker.region.policy,org.apache.activemq.command,javax.management.openmbean,org.apache.activemq.broker.region,javax.management,org.slf4j,org.apache.activemq.broker.util,javax.security.auth,org.apache.activemq.transaction,org.apache.activemq.util,org.apache.activemq.network,org.apache.activemq,org.apache.activemq.management,org.apache.activemq.broker,org.apache.activemq.store,org.apache.activemq.usage,org.apache.activemq.selector,javax.jms,org.apache.activemq.filter,org.apache.activemq.broker.region.cursors,org.apache.activemq.broker.scheduler,org.apache.activemq.network.jms,org.apache.activemq.thread,org.apache.activemq.state,org.apache.activemq.transport,javax.management.remote,org.apache.activemq.proxy,org.apache.activemq.broker.region.group'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq'/>
      <p n='uses' v='org.apache.activemq.management,org.apache.activemq.transport,org.apache.activemq.util,javax.jms,org.apache.activemq.command,org.slf4j,org.apache.activemq.blob,org.apache.activemq.state,org.apache.activemq.usage,org.apache.activemq.transport.failover,org.apache.activemq.advisory,org.apache.activemq.broker.region.policy,org.apache.activemq.thread,org.apache.activemq.jndi,org.apache.activemq.selector,org.apache.activemq.filter,org.apache.activemq.broker.region,org.apache.activemq.transaction,org.apache.activemq.broker,javax.net.ssl,javax.transaction.xa'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.util.osgi'/>
      <p n='uses' v='org.osgi.framework,org.apache.activemq.transport.discovery,org.apache.activemq,org.apache.activemq.transport,org.apache.activemq.store,org.apache.activemq.util,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.hooks'/>
      <p n='uses' v='org.springframework.beans,org.springframework.context'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.web.config'/>
      <p n='uses' v='javax.management.remote,javax.jms,org.apache.activemq,javax.naming'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.leveldb.util'/>
      <p n='uses' v='scala.runtime,scala,scala.collection,scala.collection.immutable,scala.collection.mutable,org.fusesource.leveldbjni.internal,scala.sys,scala.reflect,org.codehaus.jackson.map,org.slf4j,scala.collection.generic,org.apache.activemq.leveldb'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.http'/>
      <p n='uses' v='org.apache.activemq.transport,org.apache.activemq.util,org.apache.http.impl.client,org.apache.http.client,org.slf4j,org.apache.http,org.apache.http.client.methods,org.apache.http.protocol,org.apache.http.message,org.apache.activemq.command,org.apache.http.params,org.apache.http.entity,org.apache.http.impl.conn,org.apache.http.conn,org.apache.activemq.transport.util,org.apache.http.util,org.apache.http.auth,javax.servlet,org.apache.activemq.broker,org.springframework.core.io,org.apache.activemq.xbean,org.apache.activemq.wireformat,org.apache.activemq.transport.xstream,org.eclipse.jetty.server,org.eclipse.jetty.servlet,org.eclipse.jetty.server.handler,org.apache.activemq,javax.servlet.http'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker'/>
      <p n='uses' v='org.apache.activemq.util,org.apache.activemq.thread,org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq,org.apache.activemq.store,org.apache.activemq.usage,org.slf4j,org.apache.activemq.network,org.apache.activemq.selector,javax.annotation,org.apache.activemq.transport.vm,javax.management,org.apache.activemq.broker.region.virtual,org.apache.activemq.broker.jmx,org.apache.activemq.management,org.apache.activemq.filter,org.apache.activemq.security,org.apache.activemq.store.memory,org.apache.activemq.proxy,org.apache.activemq.network.jms,org.apache.activemq.advisory,org.apache.activemq.broker.region.policy,org.apache.activemq.broker.scheduler,org.apache.activemq.transport,org.apache.activemq.broker.cluster,org.apache.activemq.state,org.apache.activemq.transaction,org.apache.activemq.transport.tcp,javax.net.ssl,javax.jms,javax.transaction.xa,org.apache.activemq.transport.discovery,org.apache.activemq.jaas'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.disk.index'/>
      <p n='uses' v='org.apache.activemq.store.kahadb.disk.page,org.apache.activemq.store.kahadb.disk.util,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.blob'/>
      <p n='uses' v='org.apache.activemq.command,javax.jms,org.apache.commons.net.ftp'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.usage'/>
      <p n='uses' v='org.apache.activemq.broker.scheduler,org.apache.activemq.store,org.apache.activemq,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.ra'/>
      <p n='uses' v='org.apache.activemq.selector,javax.resource,javax.jms,org.apache.activemq.command,javax.resource.spi,org.apache.activemq,org.apache.activemq.filter,javax.naming,org.slf4j,javax.resource.spi.endpoint,javax.resource.spi.work,javax.security.auth,javax.transaction.xa,org.apache.activemq.broker,org.apache.activemq.util,org.apache.activemq.transaction'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.discovery.zeroconf'/>
      <p n='uses' v='javax.jmdns,org.slf4j,org.apache.activemq.transport.discovery,javax.jms,org.apache.activemq.command,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.wireformat,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.stomp'/>
      <p n='uses' v='javax.jms,org.apache.activemq.command,com.thoughtworks.xstream.converters.basic,com.thoughtworks.xstream,org.codehaus.jettison.mapped,com.thoughtworks.xstream.io.xml.xppdom,org.xmlpull.v1,com.thoughtworks.xstream.io.json,com.thoughtworks.xstream.converters,com.thoughtworks.xstream.io,com.thoughtworks.xstream.io.xml,org.apache.activemq.broker,org.apache.activemq.util,org.apache.activemq.advisory,org.slf4j,org.apache.activemq.wireformat,org.apache.activemq.transport.tcp,org.apache.activemq.state,org.apache.activemq.transport,javax.net,org.apache.activemq.transport.nio,javax.net.ssl'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.mqtt'/>
      <p n='uses' v='javax.jms,org.apache.activemq.transport.tcp,org.apache.activemq.transport,org.slf4j,org.apache.activemq.wireformat,org.apache.activemq.thread,org.apache.activemq.util,javax.net,org.apache.activemq.transport.nio,javax.net.ssl,org.apache.activemq.broker,org.apache.activemq.command,org.apache.activemq,org.apache.activemq.store,org.apache.activemq.broker.region'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.peer'/>
      <p n='uses' v='org.apache.activemq.transport.vm,org.apache.activemq.transport,org.apache.activemq.network,org.apache.activemq.broker,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.view'/>
      <p n='uses' v='org.apache.activemq.management,org.apache.activemq.broker.region,org.apache.activemq.usage,org.apache.activemq.broker.jmx,org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.filter,javax.management,org.slf4j,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.proxy'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.transport,org.apache.activemq.util,org.apache.activemq,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.protobuf'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.failover'/>
      <p n='uses' v='org.apache.activemq.transport,org.apache.activemq.thread,org.slf4j,org.apache.activemq.command,org.apache.activemq.state,org.apache.activemq,org.apache.activemq.broker,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.region.policy'/>
      <p n='uses' v='org.apache.activemq.thread,org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.broker,org.slf4j,org.apache.activemq.transport,org.apache.activemq.state,org.apache.activemq,org.apache.activemq.filter,org.apache.activemq.broker.region.cursors,org.apache.activemq.memory.list,org.apache.activemq.util,javax.jms,org.apache.activemq.network,org.apache.activemq.usage,org.apache.activemq.broker.region.group'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.region.group'/>
      <p n='uses' v='org.apache.activemq.memory,org.apache.activemq.command,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.command'/>
      <p n='uses' v='javax.jms,org.apache.activemq,org.apache.activemq.console,javax.management.remote,javax.management,org.apache.activemq.command,org.apache.activemq.console.util,org.apache.activemq.console.filter,javax.xml.parsers,javax.xml.transform.dom,org.w3c.dom,javax.xml.namespace,org.xml.sax,javax.xml.xpath,javax.xml.transform,javax.xml.transform.stream,org.jasypt.exceptions,org.jasypt.encryption.pbe,org.apache.activemq.broker.jmx,org.apache.activemq.console.formatter,org.apache.activemq.broker,org.apache.activemq.console.command.store,org.apache.activemq.console.command.store.amq'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.amqp'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.wireformat,org.apache.activemq.broker,org.apache.activemq.transport.tcp,org.apache.activemq.transport,org.apache.activemq.util,javax.jms,javax.net,org.apache.activemq.transport.nio,javax.net.ssl,org.slf4j,org.apache.activemq.selector,org.apache.activemq.filter'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.util'/>
      <p n='uses' v='org.apache.activemq.wireformat,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport'/>
      <p n='uses' v='org.slf4j,org.apache.activemq.command,org.apache.activemq.wireformat,org.apache.activemq.thread,org.apache.activemq.util,org.apache.activemq.openwire,org.eclipse.jetty.server,org.eclipse.jetty.server.ssl,org.apache.activemq.broker,org.apache.activemq.transport.https,javax.net.ssl,org.eclipse.jetty.util.ssl,org.eclipse.jetty.server.nio,org.apache.activemq,org.apache.activemq.broker.jmx,javax.management,org.apache.activemq.transport.tcp'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.util'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.state,org.apache.activemq.usage,org.apache.activemq.security,org.slf4j,org.apache.activemq.broker.region,org.apache.activemq.store,org.apache.activemq.store.jdbc,javax.net.ssl,javax.jms,org.apache.activemq.transport,org.apache.activemq'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v1'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v2'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v3'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v4'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.memory'/>
      <p n='uses' v='org.apache.activemq.thread,org.apache.activemq.usage,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.filter'/>
      <p n='uses' v='org.apache.activemq.command,javax.jms,org.apache.activemq.util,org.apache.activemq.filter.function,javax.xml.xpath,javax.xml.parsers,org.w3c.dom,javax.xml.namespace,org.xml.sax,org.apache.activemq.broker.region,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v9'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.usage,org.apache.activemq,org.apache.activemq.util,org.apache.activemq.store.journal,org.springframework.beans.factory,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v6'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v5'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v8'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.openwire.v7'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.openwire,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.wireformat'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.command.store.tar'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.network'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.transport,org.apache.activemq.broker.region,org.apache.activemq.filter,org.slf4j,org.apache.activemq,org.apache.activemq.util,javax.management,org.apache.activemq.advisory,org.apache.activemq.broker.region.policy,org.apache.activemq.thread,org.apache.activemq.broker,org.apache.activemq.transport.tcp,org.apache.activemq.store,org.apache.activemq.usage,org.apache.activemq.security,org.apache.activemq.transport.discovery,javax.naming.event,javax.naming.directory,javax.naming,org.apache.activemq.broker.jmx'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.memory'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.store,org.apache.activemq.usage,org.slf4j,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.leveldb'/>
      <p n='uses' v='scala.collection.mutable,scala.runtime,scala,scala.collection,scala.reflect,org.apache.activemq.store,org.apache.activemq.command,scala.collection.immutable,org.apache.activemq.broker,org.apache.activemq.leveldb.record,org.apache.activemq,org.apache.activemq.util,org.apache.activemq.openwire,org.apache.activemq.leveldb.util,scala.collection.generic,org.slf4j,scala.math,org.fusesource.leveldbjni.internal,scala.collection.concurrent,javax.management,org.apache.activemq.thread,org.apache.activemq.broker.jmx,org.apache.activemq.usage,org.xerial.snappy'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.formatter'/>
      <p n='uses' v='javax.jms,javax.management'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.web'/>
      <p n='uses' v='javax.jms,org.slf4j,org.apache.activemq,org.eclipse.jetty.continuation,javax.servlet,javax.servlet.http,org.apache.activemq.broker.util,org.apache.activemq.command,org.apache.activemq.broker.jmx,javax.management.openmbean,org.springframework.util,javax.management,org.springframework.web.servlet,org.apache.activemq.broker.region,org.apache.activemq.broker,org.springframework.beans.factory,org.apache.activemq.util,org.apache.activemq.web.view,org.apache.activemq.web.config,javax.management.remote,org.springframework.core.io,org.apache.activemq.xbean,org.springframework.web.context.support,javax.xml.bind'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.plist'/>
      <p n='uses' v='org.apache.activemq.store.kahadb.disk.page,org.apache.activemq.store.kahadb.disk.journal,org.apache.activemq.util,org.apache.activemq.store,org.apache.activemq.store.kahadb.disk.index,org.apache.activemq.store.kahadb.disk.util,org.slf4j,org.apache.activemq.thread,org.apache.activemq.broker'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.journal'/>
      <p n='uses' v='org.apache.activeio.journal,org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.transaction,org.slf4j,org.apache.activemq.store,org.apache.activemq.util,org.apache.activemq.filter,org.apache.activemq.usage,org.apache.activemq.thread,org.apache.activemq.store.jdbc,org.apache.activemq.openwire,org.apache.activemq.wireformat,org.apache.activeio.packet,javax.sql,org.apache.activeio.journal.active'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.osgi'/>
      <p n='uses' v='org.springframework.core.io,org.springframework.context,org.springframework.beans.factory.xml,org.apache.xbean.spring.context,org.apache.activemq.spring,org.springframework.beans.factory.config,org.slf4j,org.apache.activemq.broker,org.osgi.framework,org.osgi.service.cm'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.region'/>
      <p n='uses' v='javax.jms,org.apache.activemq.command,org.apache.activemq,org.apache.activemq.state,org.slf4j,org.apache.activemq.broker.region.policy,org.apache.activemq.broker.region.virtual,org.apache.activemq.thread,org.apache.activemq.broker,org.apache.activemq.filter,org.apache.activemq.usage,org.apache.activemq.security,org.apache.activemq.selector,javax.management,org.apache.activemq.advisory,org.apache.activemq.management,org.apache.activemq.store,org.apache.activemq.util,org.apache.activemq.broker.region.cursors,org.apache.activemq.transaction,org.apache.activemq.transport,org.apache.activemq.broker.region.group,javax.transaction.xa,org.apache.activemq.broker.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.filter,org.apache.activemq.store,org.apache.activemq.store.kahadb.data,org.apache.activemq.protobuf,org.apache.activemq.store.kahadb.disk.journal,javax.management,org.apache.activemq.broker.jmx,org.apache.activemq.broker,org.apache.activemq.usage,org.apache.activemq.util,org.apache.activemq.store.kahadb.disk.index,org.apache.activemq.store.kahadb.disk.page,org.slf4j,org.apache.activemq.wireformat,org.apache.activemq,org.apache.activemq.openwire,org.apache.activemq.management,org.apache.activemq.broker.region,org.apache.activemq.store.kahadb.disk.util,javax.transaction.xa'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.plugin'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.broker,org.slf4j,org.springframework.core.io,org.apache.activemq.security,org.apache.activemq.broker.region.virtual,org.apache.activemq.schema.core,javax.management,org.xml.sax,org.apache.activemq.broker.jmx,org.apache.activemq.thread,org.springframework.beans.factory,org.apache.activemq.network,org.apache.activemq.plugin.jmx,org.apache.activemq.spring,javax.xml.parsers,org.w3c.dom,org.apache.activemq.broker.region.policy,javax.xml.transform,javax.xml.transform.stream,org.apache.activemq.util,javax.xml.validation,javax.xml.bind,javax.jms,org.apache.activemq.state,org.apache.activemq.management,org.apache.activemq.usage'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.command.store.proto'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.jdbc.adapter'/>
      <p n='uses' v='org.apache.activemq.store.jdbc,org.apache.activemq.command,org.apache.activemq.util,javax.xml.bind,org.slf4j,javax.sql'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.command'/>
      <p n='uses' v='javax.jms,org.apache.activemq,org.apache.activemq.blob,org.apache.activemq.util,org.apache.activemq.jndi,org.apache.activemq.wireformat,org.apache.activemq.broker.scheduler,org.apache.activemq.state,org.apache.activemq.filter,org.slf4j,org.apache.activemq.usage,org.apache.activemq.broker.region,org.apache.activemq.transport,javax.transaction.xa'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.protobuf.compiler.parser'/>
      <p n='uses' v='org.apache.activemq.protobuf.compiler'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.util'/>
      <p n='uses' v='org.slf4j,org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.broker,org.apache.activemq.filter,javax.annotation,org.apache.activemq.usage,org.apache.activemq,org.apache.activemq.state,org.apache.activemq.broker.region.policy,org.apache.activemq.util,org.apache.activemq.wireformat,org.apache.activemq.openwire'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.protobuf.compiler'/>
      <p n='uses' v='org.apache.activemq.protobuf.compiler.parser,org.apache.activemq.protobuf'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.region.cursors'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq,org.apache.activemq.broker,org.apache.activemq.usage,org.apache.activemq.store,org.slf4j,org.apache.activemq.util,org.apache.activemq.openwire,org.apache.activemq.wireformat,org.apache.activemq.filter,org.apache.activemq.advisory'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.jms.pool'/>
      <p n='uses' v='javax.jms,org.apache.commons.pool,org.apache.commons.pool.impl,javax.transaction.xa,org.apache.geronimo.transaction.manager,javax.transaction,org.slf4j,javax.net.ssl,javax.naming,javax.naming.spi'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.web.view'/>
      <p n='uses' v='javax.servlet,javax.jms,javax.servlet.http,com.sun.syndication.feed.synd,com.sun.syndication.io,com.thoughtworks.xstream'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.command.store'/>
      <p n='uses' v='org.apache.activemq.console.command.store.tar,org.apache.activemq.console.command.store.proto,org.apache.activemq.command,org.apache.activemq.store,org.codehaus.jackson.map,org.apache.activemq.broker,org.apache.activemq.openwire'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.hooks.osgi'/>
      <p n='uses' v='org.springframework.osgi.context.support,org.springframework.beans,org.springframework.context,org.osgi.framework,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.partition'/>
      <p n='uses' v='org.apache.activemq.partition.dto,org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.util,org.apache.activemq.state,org.apache.activemq.transport,org.slf4j,org.codehaus.jackson.map,org.apache.zookeeper,org.apache.activemq.leveldb.replicated.groups,org.apache.zookeeper.data'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.reliable'/>
      <p n='uses' v='org.slf4j,org.apache.activemq.command,org.apache.activemq.transport,org.apache.activemq.util,org.apache.activemq.transport.udp,org.apache.activemq.openwire'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.leveldb.record'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.disk.journal'/>
      <p n='uses' v='org.apache.activemq.store.kahadb.disk.util,org.apache.activemq.util,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console'/>
      <p n='uses' v='org.apache.activemq.console.command,org.apache.activemq.console.formatter,javax.jms,javax.management'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.region.virtual'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.broker,org.apache.activemq.thread,org.apache.activemq.filter,org.apache.activemq.selector,javax.jms,org.apache.activemq.usage,org.slf4j,org.apache.activemq.plugin,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.discovery.multicast'/>
      <p n='uses' v='org.apache.activemq.transport.discovery,org.apache.activemq.command,org.slf4j,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.thread'/>
      <p n='uses' v='org.slf4j,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.util'/>
      <p n='uses' v='javax.jms,org.apache.activemq.console.filter,javax.management'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.tcp'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.wireformat,javax.net,org.apache.activemq.util,javax.net.ssl,org.apache.activemq.broker,org.apache.activemq.transport,org.slf4j,org.apache.activemq.thread,org.apache.activemq,org.apache.activemq.openwire'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.filter.function'/>
      <p n='uses' v='org.apache.activemq.filter,javax.jms,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.security'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,javax.jms,org.apache.activemq.broker.region,org.apache.activemq.filter,org.springframework.beans.factory,javax.security.auth,javax.security.auth.callback,org.apache.activemq.jaas,javax.security.auth.login,org.apache.activemq.transport.tcp,org.apache.activemq.transport,javax.naming,javax.naming.directory,javax.naming.ldap,org.apache.activemq.advisory,org.slf4j,javax.naming.event,javax.annotation'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.plugin.jmx'/>
      <p n='uses' v='org.apache.activemq.plugin,org.springframework.core.io,org.apache.activemq.broker.jmx'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.state'/>
      <p n='uses' v='org.apache.activemq.command,org.slf4j,javax.jms,org.apache.activemq.transport,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.spring'/>
      <p n='uses' v='javax.annotation,org.apache.activemq,org.springframework.beans.factory,org.apache.activemq.broker,org.springframework.beans,org.springframework.context,org.springframework.core.io,javax.net.ssl,org.springframework.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.partition.dto'/>
      <p n='uses' v='org.codehaus.jackson.map.annotate,org.codehaus.jackson.map,org.codehaus.jackson.annotate'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.broker.scheduler'/>
      <p n='uses' v='javax.jms,org.apache.activemq.util,org.apache.activemq,org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.transaction,org.apache.activemq.state,org.slf4j,org.apache.activemq.openwire,org.apache.activemq.wireformat,org.apache.activemq.usage,org.apache.activemq.security'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.fanout'/>
      <p n='uses' v='org.apache.activemq.thread,org.apache.activemq.command,org.apache.activemq,org.apache.activemq.transport,org.apache.activemq.util,org.slf4j,org.apache.activemq.state,org.apache.activemq.transport.discovery'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.console.filter'/>
      <p n='uses' v='org.apache.activemq.command,javax.jms,org.apache.activemq,javax.management,javax.management.openmbean'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.selector'/>
      <p n='uses' v='javax.jms,org.apache.activemq.filter,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.https'/>
      <p n='uses' v='org.apache.http.conn.scheme,org.apache.http.conn.ssl,org.apache.http.impl.conn,org.apache.http.conn,javax.net,org.apache.activemq.transport.util,org.apache.activemq.transport.http,org.apache.activemq.broker,org.apache.activemq.util,javax.net.ssl,org.apache.activemq.wireformat,org.apache.activemq.transport,org.eclipse.jetty.server,org.eclipse.jetty.io,org.eclipse.jetty.server.ssl,org.eclipse.jetty.util.ssl,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.wireformat'/>
      <p n='uses' v='org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.management'/>
      <p n='uses' v='javax.management.j2ee.statistics,org.apache.activemq,org.apache.activemq.util,javax.jms,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.disk.util'/>
      <p n='uses' v='org.apache.activemq.util,org.apache.activemq.store.kahadb.disk.page,org.apache.activemq.store.kahadb.disk.journal'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.memory.buffer'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker.region'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.network.jms'/>
      <p n='uses' v='javax.jms,org.apache.activemq,org.slf4j,org.apache.activemq.util,org.apache.activemq.broker,org.springframework.jndi,javax.naming'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.logwriters'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.transport,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.store.kahadb.data'/>
      <p n='uses' v='org.apache.activemq.store.kahadb,org.apache.activemq.protobuf'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.discovery.masterslave'/>
      <p n='uses' v='org.apache.activemq.transport.discovery.simple,org.slf4j,org.apache.activemq.transport.discovery,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transaction'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,javax.transaction.xa,org.apache.activemq.store,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.mock'/>
      <p n='uses' v='org.apache.activemq.transport,org.apache.activemq.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.transport.udp'/>
      <p n='uses' v='org.apache.activemq,org.apache.activemq.command,org.apache.activemq.transport.reliable,org.apache.activemq.util,org.apache.activemq.openwire,org.slf4j,org.apache.activemq.transport,org.apache.activemq.wireformat,org.apache.activemq.transport.tcp'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.feed.synd)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.feed.synd ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.syndication.io)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.sun.syndication.io ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream.converters)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream.converters ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream.converters.basic)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream.converters.basic ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream.io)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream.io ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream.io.json)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream.io.json ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream.io.xml)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream.io.xml ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.xstream.io.xml.xppdom)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.xstream.io.xml.xppdom ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=groovy.lang)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package groovy.lang
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.annotation ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.jmdns)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.jmdns
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.jms ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.j2ee.statistics)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.management.j2ee.statistics ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.openmbean
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.remote
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming.directory
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.event)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming.event
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.ldap)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming.ldap
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.net)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.endpoint)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.endpoint ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.resource.spi.work)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.resource.spi.work ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.callback)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.callback
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.login)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.login
    </require>
    <require extend='false' filter='(&amp;(package=javax.security.auth.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.security.auth.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=2.5.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.http ;version=[2.5.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.bind.annotation.adapters)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.bind.annotation.adapters
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.xpath)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.xpath
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activeio.journal)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.activeio.journal ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activeio.journal.active)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.activeio.journal.active ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activeio.packet)(version&gt;=3.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.activeio.packet ;version=[3.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.net.ftp)(version&gt;=3.3.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.net.ftp ;version=[3.3.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.pool.impl)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.pool.impl ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.derby.jdbc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.derby.jdbc
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.geronimo.transaction.manager)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.geronimo.transaction.manager
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.hadoop.io.compress)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.hadoop.io.compress
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.auth)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.auth
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.client.methods)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.client.methods
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.conn
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.scheme)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.conn.scheme
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.conn.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.conn.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.entity)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.entity
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.impl.client
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.impl.conn)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.impl.conn
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.message)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.message
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.params)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.params
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.protocol)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.protocol
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.http.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.http.util
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.helpers)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j.helpers ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.spi)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j.spi ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xbean.spring.context)(version&gt;=3.16.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.xbean.spring.context ;version=[3.16.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.xbean.spring.context.impl)(version&gt;=3.16.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.xbean.spring.context.impl ;version=[3.16.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.zookeeper)(version&gt;=3.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.zookeeper ;version=[3.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.zookeeper.data)(version&gt;=3.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.zookeeper.data ;version=[3.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.zookeeper.server)(version&gt;=3.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.zookeeper.server ;version=[3.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.zookeeper.server.persistence)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.zookeeper.server.persistence
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.zookeeper.server.quorum)(version&gt;=3.4.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.zookeeper.server.quorum ;version=[3.4.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.reflection)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.reflection
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime.callsite)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime.callsite
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime.typehandling)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime.typehandling
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.runtime.wrappers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.runtime.wrappers
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.annotate ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jackson.map.annotate)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jackson.map.annotate ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.jettison.mapped)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.jettison.mapped
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.continuation)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.continuation ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.io)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.io ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.server ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.handler)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.server.handler ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.nio)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.server.nio ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.server.ssl)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.server.ssl ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.servlet)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.servlet ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.util.ssl)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.util.ssl ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.jetty.websocket)(version&gt;=7.6.0)(!(version&gt;=8.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.jetty.websocket ;version=[7.6.0,8.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.leveldbjni.internal)(version&gt;=1.8.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.fusesource.leveldbjni.internal ;version=[1.8.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jasypt.encryption)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jasypt.encryption
    </require>
    <require extend='false' filter='(&amp;(package=org.jasypt.encryption.pbe)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jasypt.encryption.pbe
    </require>
    <require extend='false' filter='(&amp;(package=org.jasypt.encryption.pbe.config)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jasypt.encryption.pbe.config
    </require>
    <require extend='false' filter='(&amp;(package=org.jasypt.exceptions)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jasypt.exceptions
    </require>
    <require extend='false' filter='(&amp;(package=org.jasypt.properties)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.jasypt.properties
    </require>
    <require extend='false' filter='(&amp;(package=org.json)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.json
    </require>
    <require extend='false' filter='(&amp;(package=org.jvnet.jaxb2_commons.lang)(version&gt;=0.6.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jvnet.jaxb2_commons.lang ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jvnet.jaxb2_commons.locator)(version&gt;=0.6.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jvnet.jaxb2_commons.locator ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jvnet.jaxb2_commons.locator.util)(version&gt;=0.6.0)(!(version&gt;=1.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jvnet.jaxb2_commons.locator.util ;version=[0.6.0,1.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.objectweb.asm
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.config ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.beans.factory.xml ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.context ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core.io ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.jndi)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.jndi ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.osgi.context.support)(version&gt;=1.2.0)(version&lt;=1.3.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.osgi.context.support ;version=[1.2.0,1.3.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.util ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.support ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.servlet)(version&gt;=3.0.0)(version&lt;=4.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.servlet ;version=[3.0.0,4.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xerial.snappy)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.xerial.snappy ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.xmlpull.v1)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xmlpull.v1
    </require>
    <require extend='false' filter='(&amp;(package=scala)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.collection)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.collection ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.collection.concurrent)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.collection.concurrent ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.collection.generic)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.collection.generic ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.collection.immutable)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.collection.immutable ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.collection.mutable)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.collection.mutable ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.math)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.math ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.reflect)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.reflect ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.runtime)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.runtime ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=scala.sys)(version&gt;=2.11.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package scala.sys ;version=[2.11.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=sun.misc)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.misc
    </require>
    <require extend='false' filter='(&amp;(package=sun.nio.ch)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.nio.ch
    </require>
  </resource>
  <resource id='org.apache.activemq.shiro/5.10.1' presentationname='activemq-shiro' symbolicname='org.apache.activemq.shiro' uri='org.apache.activemq.shiro/org.apache.activemq.shiro-5.10.1.jar' version='5.10.1'>
    <description>
      ActiveMQ secured by Apache Shiro
    </description>
    <size>
      44359
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='activemq-shiro'/>
      <p n='symbolicname' v='org.apache.activemq.shiro'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro.authc'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.activemq.shiro.env,org.apache.activemq.command,org.apache.activemq.broker,org.apache.activemq.shiro,org.apache.shiro.subject,org.apache.shiro.env,org.apache.activemq.security,org.apache.activemq.shiro.subject,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro.env'/>
      <p n='uses' v='org.apache.activemq.shiro,org.apache.shiro.env,org.apache.shiro.realm,org.apache.shiro.config,org.apache.activemq.shiro.authz,org.apache.activemq.shiro.mgt,org.apache.shiro.mgt,org.apache.shiro.realm.text,org.apache.shiro.authz.permission,org.apache.shiro.io,org.apache.shiro,org.apache.shiro.util'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro.authz'/>
      <p n='uses' v='org.apache.shiro.authz,org.apache.shiro.authz.permission,org.apache.activemq.shiro.env,org.apache.activemq.command,org.apache.activemq.broker.region,org.apache.activemq.broker,org.apache.shiro.subject,org.apache.activemq.security,org.apache.activemq.shiro.subject'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro'/>
      <p n='uses' v='org.apache.activemq.command,org.apache.activemq.broker,org.apache.shiro.env,org.apache.activemq.security,org.apache.activemq.shiro.subject,org.apache.shiro.mgt,org.apache.activemq.shiro.authc,org.apache.activemq.shiro.env,org.apache.shiro.config,org.apache.activemq,org.apache.activemq.shiro.authz,org.slf4j'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro.mgt'/>
      <p n='uses' v='org.apache.shiro.session.mgt,org.apache.activemq.shiro.session.mgt,org.apache.shiro.mgt'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro.session.mgt'/>
      <p n='uses' v='org.apache.shiro.session.mgt,org.apache.shiro.session'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.activemq.shiro.subject'/>
      <p n='uses' v='org.apache.activemq.shiro,org.apache.shiro.subject,org.apache.activemq.broker,org.apache.activemq.security,org.apache.activemq.shiro.authc,org.apache.shiro.mgt,org.apache.shiro.env,org.apache.activemq.command,org.apache.activemq.shiro.env'/>
      <p n='version' t='version' v='5.10.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.activemq)(version&gt;=5.10.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq ;version=5.10.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activemq.broker)(version&gt;=5.10.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq.broker ;version=5.10.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activemq.broker.region)(version&gt;=5.10.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq.broker.region ;version=5.10.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activemq.command)(version&gt;=5.10.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq.command ;version=5.10.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activemq.security)(version&gt;=5.10.1))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq.security ;version=5.10.1
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authc)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authc ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz.permission)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz.permission ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.config)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.config ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.env)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.env ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.io)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.io ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.mgt)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.mgt ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm.text)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm.text ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session.mgt)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session.mgt ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.subject)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.subject ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.util)(version&gt;=1.2.0)(version&lt;=2.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.util ;version=[1.2.0,2.0.0]
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint/1.1.0' presentationname='Apache Aries Blueprint Bundle' symbolicname='org.apache.aries.blueprint' uri='org.apache.aries.blueprint/org.apache.aries.blueprint-1.1.0.jar' version='1.1.0'>
    <description>
      This bundle contains the standalone implementation along with
       the API.        It's composed of the blueprint-api, blueprint-core
       and blueprint-cm modules.
    </description>
    <size>
      451621
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.ParserService'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Bundle'/>
      <p n='symbolicname' v='org.apache.aries.blueprint'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.container,org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.apache.aries.blueprint.ext,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.compendium.cm'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.container'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.services,org.osgi.framework,org.w3c.dom'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.services'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.apache.aries.proxy,org.osgi.service.blueprint.container'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.slf4j,org.apache.aries.blueprint,org.osgi.framework,org.osgi.service.blueprint.container,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.services,org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.blueprint.services,org.osgi.service.blueprint.container,org.slf4j'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(service=org.osgi.service.cm.ConfigurationAdmin)' multiple='true' name='service' optional='false'>
      Import Service org.osgi.service.cm.ConfigurationAdmin
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.blueprint.annotation.service
       ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.annotation.api/1.0.0' presentationname='Apache Aries Blueprint Annotation API' symbolicname='org.apache.aries.blueprint.annotation.api' uri='org.apache.aries.blueprint.annotation.api/org.apache.aries.blueprint.annotation.api-1.0.0.jar' version='1.0.0'>
    <description>
      This bundle contains the blueprint annotation api and the corresponding
       xml schema.
    </description>
    <size>
      20261
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Annotation API'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.annotation.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.annotation.service'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.annotation'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.api/1.0.0' presentationname='Apache Aries Blueprint API' symbolicname='org.apache.aries.blueprint.api' uri='org.apache.aries.blueprint.api/org.apache.aries.blueprint.api-1.0.0.jar' version='1.0.0'>
    <description>
      This bundle contains the blueprint api 1.0.1 and the corresponding
       xml schema.
    </description>
    <size>
      33272
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint API'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint.container'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.cm/1.0.0' presentationname='Apache Aries Blueprint CM' symbolicname='org.apache.aries.blueprint.cm' uri='org.apache.aries.blueprint.cm/org.apache.aries.blueprint.cm-1.0.0.jar' version='1.0.0'>
    <description>
      This bundle contains the ConfigAdmin namespace for blueprint.
    </description>
    <size>
      52572
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint CM'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.cm'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.ext)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.ext ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.mutable)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.mutable ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.services)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.services ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.utils)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.utils ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.cm/1.0.1' presentationname='Apache Aries Blueprint CM' symbolicname='org.apache.aries.blueprint.cm' uri='org.apache.aries.blueprint.cm/org.apache.aries.blueprint.cm-1.0.1.jar' version='1.0.1'>
    <description>
      This bundle contains the ConfigAdmin namespace for blueprint.
    </description>
    <size>
      52800
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint CM'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.cm'/>
      <p n='version' t='version' v='1.0.1'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint)(version&gt;=1.0.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint ;version=[1.0.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.ext)(version&gt;=1.0.0)(!(version&gt;=1.2.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.ext ;version=[1.0.0,1.2.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.mutable)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.mutable ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.services)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.services ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.utils)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.blueprint.utils ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.cm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.cm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.core/1.1.0' presentationname='Apache Aries Blueprint Core' symbolicname='org.apache.aries.blueprint.core' uri='org.apache.aries.blueprint.core/org.apache.aries.blueprint.core-1.1.0.jar' version='1.1.0'>
    <description>
      This bundle contains the core implementation of Blueprint 
             along with the "ext" namespace handler.
    </description>
    <size>
      389623
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.ParserService'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Core'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.core'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.services,org.osgi.framework,org.w3c.dom'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.slf4j,org.apache.aries.blueprint,org.osgi.framework,org.osgi.service.blueprint.container,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.services,org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.services'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.apache.aries.proxy,org.osgi.service.blueprint.container'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.blueprint.services,org.osgi.service.blueprint.container,org.slf4j'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.blueprint.annotation.service
       ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.core/1.2.0' presentationname='Apache Aries Blueprint Core' symbolicname='org.apache.aries.blueprint.core' uri='org.apache.aries.blueprint.core/org.apache.aries.blueprint.core-1.2.0.jar' version='1.2.0'>
    <description>
      This bundle contains the core implementation of Blueprint 
             along with the "ext" namespace handler.
    </description>
    <size>
      398576
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.ParserService'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Core'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.core'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint.services,org.osgi.framework,org.w3c.dom'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.apache.aries.blueprint,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='uses' v='org.osgi.service.blueprint.reflect,org.slf4j,org.apache.aries.blueprint,org.osgi.framework,org.osgi.service.blueprint.container,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.services,org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.services'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.service.blueprint.reflect,org.osgi.framework,org.apache.aries.proxy,org.osgi.service.blueprint.container'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.blueprint.services,org.osgi.service.blueprint.container,org.slf4j'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.blueprint.annotation.service
       ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
  </resource>
  <resource id='org.apache.aries.blueprint.core/1.4.2' presentationname='Apache Aries Blueprint Core' symbolicname='org.apache.aries.blueprint.core' uri='org.apache.aries.blueprint.core/org.apache.aries.blueprint.core-1.4.2.jar' version='1.4.2'>
    <description>
      This bundle contains the core implementation of Blueprint 
             along with the "ext" namespace handler.
    </description>
    <size>
      418647
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='service'>
      <p n='service' v='org.apache.aries.blueprint.NamespaceHandler'/>
    </capability>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Blueprint Core'/>
      <p n='symbolicname' v='org.apache.aries.blueprint.core'/>
      <p n='version' t='version' v='1.4.2'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint'/>
      <p n='uses' v='org.apache.aries.blueprint.services,org.osgi.framework,org.osgi.service.blueprint.reflect,org.w3c.dom'/>
      <p n='version' t='version' v='1.3.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.mutable'/>
      <p n='uses' v='org.apache.aries.blueprint,org.osgi.framework,org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext'/>
      <p n='uses' v='org.apache.aries.blueprint,org.apache.aries.blueprint.ext.evaluator,org.apache.aries.blueprint.mutable,org.apache.aries.blueprint.services,org.osgi.service.blueprint.container,org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.ext.evaluator'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.services'/>
      <p n='uses' v='org.apache.aries.blueprint,org.apache.aries.proxy,org.osgi.framework,org.osgi.service.blueprint.container,org.osgi.service.blueprint.reflect'/>
      <p n='version' t='version' v='1.2.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.blueprint.utils'/>
      <p n='uses' v='org.apache.aries.blueprint.services,org.osgi.framework'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.osgi.service.blueprint'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(service=org.apache.aries.proxy.ProxyManager)' multiple='true' name='service' optional='false'>
      Import Service org.apache.aries.proxy.ProxyManager
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.manager)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.manager ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.quiesce.participant)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.quiesce.participant ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.container)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.container ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.blueprint.reflect)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.service.blueprint.reflect ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.event)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.event ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.parsers
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.dom
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stream
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.validation)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.validation
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.tracker)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.tracker ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom.ls)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom.ls
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.blueprint.annotation.service)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.blueprint.annotation.service
       ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.proxy.api/1.0.0' presentationname='Apache Aries Proxy API' symbolicname='org.apache.aries.proxy.api' uri='org.apache.aries.proxy.api/org.apache.aries.proxy.api-1.0.0.jar' version='1.0.0'>
    <description>
      This bundle contains the Apache Aries Proxy service API.
    </description>
    <size>
      14344
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Proxy API'/>
      <p n='symbolicname' v='org.apache.aries.proxy.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy.weavinghook'/>
      <p n='uses' v='org.osgi.framework.hooks.weaving'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy.nls'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy'/>
      <p n='uses' v='org.apache.aries.util.nls,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.nls)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.nls ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.hooks.weaving)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.hooks.weaving ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.proxy.impl/1.0.0' presentationname='Apache Aries Proxy Service' symbolicname='org.apache.aries.proxy.impl' uri='org.apache.aries.proxy.impl/org.apache.aries.proxy.impl-1.0.0.jar' version='1.0.0'>
    <description>
      This bundle contains the proxy service implementation for Apache
       Aries
    </description>
    <size>
      83847
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Proxy Service'/>
      <p n='symbolicname' v='org.apache.aries.proxy.impl'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.proxy.weaving'/>
      <p n='uses' v='org.apache.aries.proxy'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.proxy ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.proxy.weavinghook)(version&gt;=1.0.0)(!(version&gt;=1.1.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.aries.proxy.weavinghook ;version=[1.0.0,1.1.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.aries.util.nls)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.aries.util.nls ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.asm ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm.commons)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.asm.commons ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.hooks.weaving)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.hooks.weaving ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.quiesce.api/1.0.0' presentationname='Apache Aries Quiesce API' symbolicname='org.apache.aries.quiesce.api' uri='org.apache.aries.quiesce.api/org.apache.aries.quiesce.api-1.0.0.jar' version='1.0.0'>
    <description>
      Quiesce API.
    </description>
    <size>
      10717
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Quiesce API'/>
      <p n='symbolicname' v='org.apache.aries.quiesce.api'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.quiesce.manager'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.quiesce.participant'/>
      <p n='uses' v='org.apache.aries.quiesce.manager,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.aries.util/1.1.0' presentationname='Apache Aries Util' symbolicname='org.apache.aries.util' uri='org.apache.aries.util/org.apache.aries.util-1.1.0.jar' version='1.1.0'>
    <description>
      This bundle contains the OSGi common util for Apache Aries
    </description>
    <size>
      110538
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Aries Util'/>
      <p n='symbolicname' v='org.apache.aries.util'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.service.registry'/>
      <p n='uses' v='org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.tracker.hook'/>
      <p n='uses' v='org.osgi.framework,org.osgi.framework.hooks.bundle,org.osgi.util.tracker'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.log'/>
      <p n='uses' v='org.osgi.service.log,org.osgi.util.tracker,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.internal'/>
      <p n='uses' v='org.osgi.framework,org.osgi.framework.wiring'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.messages'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util'/>
      <p n='uses' v='org.apache.aries.util.internal,org.osgi.framework'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.io'/>
      <p n='uses' v='org.apache.aries.util.internal,org.apache.aries.util.filesystem'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.nls'/>
      <p n='uses' v='org.osgi.framework,org.apache.aries.util,org.apache.aries.util.internal'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.filesystem'/>
      <p n='uses' v='org.apache.aries.util.filesystem.impl,org.apache.aries.util.manifest'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.filesystem.impl'/>
      <p n='uses' v='org.apache.aries.util.internal,org.apache.aries.util.filesystem,org.apache.aries.util,org.apache.aries.util.io'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.tracker'/>
      <p n='uses' v='org.osgi.util.tracker,org.osgi.framework,org.osgi.framework.launch,org.osgi.service.framework,org.apache.aries.util.tracker.hook'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.aries.util.manifest'/>
      <p n='uses' v='org.apache.aries.util.io,org.apache.aries.util.internal,org.apache.aries.util.filesystem,org.osgi.framework,org.apache.aries.util'/>
      <p n='version' t='version' v='1.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.adaptor)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.adaptor
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.framework.internal.core)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.framework.internal.core
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.osgi.internal.loader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.osgi.internal.loader
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.hooks.bundle)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.hooks.bundle ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.launch)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.launch ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework.wiring)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework.wiring ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.framework)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.framework ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.service.log)(version&gt;=1.3.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.service.log ;version=[1.3.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.util.tracker)(version&gt;=1.4.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.osgi.util.tracker ;version=[1.4.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.geronimo.components.geronimo-transaction/3.1.1' presentationname='Geronimo TxManager :: Transaction' symbolicname='org.apache.geronimo.components.geronimo-transaction' uri='org.apache.geronimo.components.geronimo-transaction/org.apache.geronimo.components.geronimo-transaction-3.1.1.jar' version='3.1.1'>
    <description>
      Apache Geronimo Transaction Manager
    </description>
    <size>
      72177
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://geronimo.apache.org/maven/components/geronimo-transaction/3.1.1
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Geronimo TxManager :: Transaction'/>
      <p n='symbolicname' v='org.apache.geronimo.components.geronimo-transaction'/>
      <p n='version' t='version' v='3.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.log'/>
      <p n='uses' v='org.objectweb.howl.log,org.objectweb.howl.log.xa,javax.transaction.xa,org.apache.geronimo.transaction.manager,org.slf4j'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction.manager'/>
      <p n='uses' v='javax.transaction,javax.transaction.xa,org.slf4j,javax.resource.spi,org.apache.geronimo.transaction.log'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.geronimo.transaction'/>
      <p n='uses' v='javax.transaction'/>
      <p n='version' t='version' v='3.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.resource.spi)(version&gt;=1.5.0))' multiple='false' name='package' optional='false'>
      Import package javax.resource.spi ;version=1.5.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.geronimo.transaction)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.geronimo.transaction ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.geronimo.transaction.log)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.geronimo.transaction.log ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.geronimo.transaction.manager)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.geronimo.transaction.manager ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.howl.log)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.howl.log
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.howl.log.xa)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.howl.log.xa
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.apache.geronimo.specs.geronimo-jms_1.1_spec/1.1.1' presentationname='geronimo-jms_1.1_spec' symbolicname='org.apache.geronimo.specs.geronimo-jms_1.1_spec' uri='org.apache.geronimo.specs.geronimo-jms_1.1_spec/org.apache.geronimo.specs.geronimo-jms_1.1_spec-1.1.1.jar' version='1.1.1'>
    <description>
      Provides open-source implementations of Sun specifications.
    </description>
    <size>
      32359
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='geronimo-jms_1.1_spec'/>
      <p n='symbolicname' v='org.apache.geronimo.specs.geronimo-jms_1.1_spec'/>
      <p n='version' t='version' v='1.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.jms'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.jms ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction.xa)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction.xa
    </require>
  </resource>
  <resource id='org.apache.shiro.core/1.2.3' presentationname='Apache Shiro :: Core' symbolicname='org.apache.shiro.core' uri='org.apache.shiro.core/org.apache.shiro.core-1.2.3.jar' version='1.2.3'>
    <description>
      Apache Shiro is a powerful and flexible open-source security
       framework that cleanly handles        authentication, authorization,
       enterprise session management, single sign-on and cryptography
       services.
    </description>
    <size>
      367458
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Shiro :: Core'/>
      <p n='symbolicname' v='org.apache.shiro.core'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.crypto'/>
      <p n='uses' v='javax.crypto,org.apache.shiro.util,org.apache.shiro,javax.crypto.spec,org.slf4j'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authc.pam'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.shiro.realm,org.slf4j,org.apache.shiro.util,org.apache.shiro.subject'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authz.aop'/>
      <p n='uses' v='org.apache.shiro.authz,org.apache.shiro.aop,org.apache.shiro.authz.annotation,org.apache.shiro.subject'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.codec'/>
      <p n='uses' v='org.apache.shiro,org.apache.shiro.util'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authc.credential'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.shiro.crypto.hash,org.apache.shiro.crypto.hash.format,org.apache.shiro.util,org.slf4j,org.apache.shiro.codec'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.crypto.hash.format'/>
      <p n='uses' v='org.apache.shiro.crypto.hash,org.apache.shiro.util,org.apache.shiro.codec'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.subject'/>
      <p n='uses' v='org.apache.shiro,org.apache.shiro.util,org.apache.shiro.subject.support,org.apache.shiro.session,org.apache.shiro.mgt,org.apache.shiro.authc,org.apache.shiro.authz'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.concurrent'/>
      <p n='uses' v='org.apache.shiro,org.apache.shiro.subject'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.cache'/>
      <p n='uses' v='org.apache.shiro.util,org.apache.shiro'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authz.annotation'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.realm.activedirectory'/>
      <p n='uses' v='org.apache.shiro.authc,javax.naming,javax.naming.directory,org.apache.shiro.authz,javax.naming.ldap,org.apache.shiro.subject,org.slf4j,org.apache.shiro.realm.ldap'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authc'/>
      <p n='uses' v='org.apache.shiro.subject,org.slf4j,org.apache.shiro.authz,org.apache.shiro,org.apache.shiro.util'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.jndi'/>
      <p n='uses' v='javax.naming,org.slf4j,org.apache.shiro.util'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro'/>
      <p n='uses' v='org.apache.shiro.util,org.apache.shiro.subject,org.apache.shiro.mgt'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.realm.jdbc'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.shiro.realm,org.apache.shiro.config,javax.sql,org.apache.shiro.authz,org.apache.shiro.util,org.apache.shiro.subject,org.slf4j'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.crypto.hash'/>
      <p n='uses' v='org.apache.shiro.crypto,org.apache.shiro.codec,org.apache.shiro.util'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.functor'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.util'/>
      <p n='uses' v='org.slf4j,org.apache.shiro.subject,org.apache.shiro,org.apache.shiro.authz,org.apache.shiro.authz.permission,org.apache.shiro.codec,org.apache.shiro.mgt'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.mgt'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.shiro.crypto,org.apache.shiro.io,org.apache.shiro.codec,org.apache.shiro.util,org.apache.shiro.subject,org.slf4j,org.apache.shiro.authc.pam,org.apache.shiro.authz,org.apache.shiro.cache,org.apache.shiro.realm,org.apache.shiro.session.mgt,org.apache.shiro.subject.support,org.apache.shiro.session'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.realm.ldap'/>
      <p n='uses' v='org.apache.shiro.authc,javax.naming,org.apache.shiro.realm,org.apache.shiro.authz,org.apache.shiro.subject,org.slf4j,javax.naming.ldap,org.apache.shiro.util,org.apache.shiro.authc.credential,org.apache.shiro.ldap,javax.naming.directory'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.io'/>
      <p n='uses' v='org.apache.shiro.util,org.slf4j,org.apache.shiro'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.realm'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.shiro.authc.credential,org.apache.shiro.cache,org.apache.shiro.util,org.apache.shiro.subject,org.slf4j,org.apache.shiro.authz,org.apache.shiro.authz.permission'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.realm.jndi'/>
      <p n='uses' v='org.apache.shiro.jndi,org.apache.shiro.realm,org.apache.shiro.util'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.ldap'/>
      <p n='uses' v='org.apache.shiro.dao'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.config'/>
      <p n='uses' v='org.apache.shiro,org.apache.shiro.util,org.slf4j,org.apache.shiro.io,org.apache.shiro.realm,org.apache.shiro.realm.text,org.apache.shiro.mgt,org.apache.commons.beanutils,org.apache.shiro.codec'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.dao'/>
      <p n='uses' v='org.apache.shiro'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authz'/>
      <p n='uses' v='org.apache.shiro,org.apache.shiro.subject,org.apache.shiro.realm,org.apache.shiro.authz.permission'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.session.mgt'/>
      <p n='uses' v='org.apache.shiro.authz,org.apache.shiro.util,org.slf4j,org.apache.shiro.session,org.apache.shiro.cache,org.apache.shiro.session.mgt.eis'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.aop'/>
      <p n='uses' v='org.apache.shiro,org.apache.shiro.subject'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.subject.support'/>
      <p n='uses' v='org.apache.shiro.authc,org.apache.shiro,org.apache.shiro.util,org.apache.shiro.subject,org.apache.shiro.session,org.apache.shiro.mgt,org.slf4j,org.apache.shiro.authz,org.apache.shiro.session.mgt'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.env'/>
      <p n='uses' v='org.apache.shiro.util,org.apache.shiro.mgt,org.apache.shiro'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.realm.text'/>
      <p n='uses' v='org.apache.shiro.config,org.apache.shiro.util,org.slf4j,org.apache.shiro.io,org.apache.shiro,org.apache.shiro.authc,org.apache.shiro.realm,org.apache.shiro.authz,org.apache.shiro.authz.permission'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.session'/>
      <p n='uses' v='org.apache.shiro'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.session.mgt.eis'/>
      <p n='uses' v='org.apache.shiro.session.mgt,org.apache.shiro.session,org.apache.shiro.cache,org.apache.shiro.util,org.slf4j'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.authz.permission'/>
      <p n='uses' v='org.apache.shiro.authz,org.apache.shiro.util,org.apache.shiro'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.crypto)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto
    </require>
    <require extend='false' filter='(&amp;(package=javax.crypto.spec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.crypto.spec
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.directory)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.directory
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.ldap)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.ldap
    </require>
    <require extend='false' filter='(&amp;(package=javax.sql)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.sql
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.beanutils)(version&gt;=1.8.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.commons.beanutils ;version=1.8.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.aop)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.aop ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authc)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authc ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authc.credential)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authc.credential ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authc.pam)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authc.pam ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz.annotation)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz.annotation ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz.aop)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz.aop ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz.permission)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz.permission ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.cache)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.cache ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.codec)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.codec ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.concurrent)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.concurrent ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.config ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.crypto)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.crypto ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.crypto.hash)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.crypto.hash ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.crypto.hash.format)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.crypto.hash.format ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.dao)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.dao ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.env)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.env ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.functor)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.functor ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.io)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.io ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.jndi)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.jndi ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.ldap)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.ldap ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm.activedirectory)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm.activedirectory ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm.jdbc)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm.jdbc ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm.jndi)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm.jndi ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm.ldap)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm.ldap ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm.text)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm.text ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session.mgt.eis)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session.mgt.eis ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.subject)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.subject ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.subject.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.subject.support ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.util)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.util ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.0
    </require>
  </resource>
  <resource id='org.apache.shiro.web/1.2.3' presentationname='Apache Shiro :: Web' symbolicname='org.apache.shiro.web' uri='org.apache.shiro.web/org.apache.shiro.web-1.2.3.jar' version='1.2.3'>
    <description>
      Apache Shiro is a powerful and flexible open-source security
       framework that cleanly handles        authentication, authorization,
       enterprise session management, single sign-on and cryptography
       services.
    </description>
    <size>
      142474
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://www.apache.org/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache Shiro :: Web'/>
      <p n='symbolicname' v='org.apache.shiro.web'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.servlet'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.util,org.slf4j,org.apache.shiro,org.apache.shiro.web.subject,org.apache.shiro.subject,org.apache.shiro.mgt,org.apache.shiro.web.filter.mgt,org.apache.shiro.web.mgt,org.apache.shiro.session,javax.servlet.http,org.apache.shiro.io,org.apache.shiro.config,org.apache.shiro.web.util,org.apache.shiro.web.config,org.apache.shiro.web.env,org.apache.shiro.subject.support,org.apache.shiro.web.session'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.filter.authz'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.web.util,org.apache.shiro.web.filter,org.apache.shiro.util,org.apache.shiro.subject,javax.servlet.http,org.slf4j,org.apache.shiro.config'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.session.mgt'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.session.mgt,org.apache.shiro.web.servlet,org.apache.shiro.web.util,org.apache.shiro.session,org.slf4j,javax.servlet.http,org.apache.shiro.web.session,org.apache.shiro.authz'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.subject'/>
      <p n='uses' v='javax.servlet,org.apache.shiro,org.apache.shiro.subject,org.apache.shiro.mgt,org.apache.shiro.web.subject.support,org.apache.shiro.web.util'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.env'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.web.filter.mgt,org.apache.shiro.web.mgt,org.apache.shiro.mgt,org.apache.shiro.env,org.apache.shiro.config,org.apache.shiro.util,org.slf4j,org.apache.shiro.io,org.apache.shiro.web.util,org.apache.shiro.web.config'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.filter.authc'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.web.filter,org.apache.shiro.authc,org.apache.shiro.authz,org.apache.shiro.subject,org.apache.shiro.web.util,org.apache.shiro.codec,org.slf4j,javax.servlet.http,org.apache.shiro,org.apache.shiro.web.servlet,org.apache.shiro.session'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.session'/>
      <p n='uses' v='org.apache.shiro.web.servlet,org.apache.shiro.util,org.apache.shiro.session,javax.servlet.http'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.tags'/>
      <p n='uses' v='org.apache.shiro.subject,javax.servlet.jsp,org.slf4j,org.apache.shiro,javax.servlet.jsp.tagext'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.filter.mgt'/>
      <p n='uses' v='org.apache.shiro.web.filter.authc,javax.servlet,org.apache.shiro.web.filter.authz,org.apache.shiro.web.filter.session,org.apache.shiro.util,org.apache.shiro.config,org.apache.shiro.web.filter,org.slf4j,org.apache.shiro.web.util,javax.servlet.http,org.apache.shiro.web.servlet'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.util'/>
      <p n='uses' v='javax.servlet.http,javax.servlet,org.apache.shiro,org.apache.shiro.util,org.apache.shiro.subject,org.slf4j,org.apache.shiro.web.env,org.apache.shiro.subject.support,org.apache.shiro.session'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.filter.session'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.web.filter,org.apache.shiro.subject.support'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.filter'/>
      <p n='uses' v='javax.servlet,org.apache.shiro,org.apache.shiro.web.util,org.apache.shiro.subject,org.apache.shiro.web.servlet,org.apache.shiro.util,org.slf4j,javax.servlet.http'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.mgt'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.codec,org.apache.shiro.web.servlet,org.apache.shiro.web.util,org.apache.shiro.web.subject,org.apache.shiro.subject,org.slf4j,org.apache.shiro.mgt,javax.servlet.http,org.apache.shiro.web.session.mgt,org.apache.shiro.util,org.apache.shiro.realm,org.apache.shiro.session.mgt,org.apache.shiro.web.subject.support,org.apache.shiro.session'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.config'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.config,org.apache.shiro.web.filter.mgt,org.apache.shiro.util,org.slf4j,org.apache.shiro.web.mgt,org.apache.shiro.mgt'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.shiro.web.subject.support'/>
      <p n='uses' v='javax.servlet,org.apache.shiro.web.subject,org.apache.shiro.subject,org.apache.shiro.subject.support,org.apache.shiro.session.mgt,org.apache.shiro.web.util,org.apache.shiro.web.session.mgt,org.apache.shiro.util,org.apache.shiro.mgt,org.apache.shiro.session'/>
      <p n='version' t='version' v='1.2.3'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.servlet)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.http)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.servlet.http
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp
    </require>
    <require extend='false' filter='(&amp;(package=javax.servlet.jsp.tagext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.servlet.jsp.tagext
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authc)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authc ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.authz)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.authz ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.codec)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.codec ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.config ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.env)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.env ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.io)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.io ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.realm)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.realm ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.session.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.session.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.subject)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.subject ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.subject.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.subject.support ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.util)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.util ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.config)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.config ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.env)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.env ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.filter)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.filter ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.filter.authc)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.filter.authc ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.filter.authz)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.filter.authz ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.filter.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.filter.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.filter.session)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.filter.session ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.servlet)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.servlet ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.session)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.session ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.session.mgt)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.session.mgt ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.subject)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.subject ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.subject.support)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.subject.support ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.tags)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.tags ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.shiro.web.util)(version&gt;=1.2.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.shiro.web.util ;version=[1.2.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.slf4j)(version&gt;=1.6.0))' multiple='false' name='package' optional='false'>
      Import package org.slf4j ;version=1.6.0
    </require>
  </resource>
  <resource id='org.apache.xbean.spring/4.1.0' presentationname='Apache XBean :: Spring' symbolicname='org.apache.xbean.spring' uri='org.apache.xbean.spring/org.apache.xbean.spring-4.1.0.jar' version='4.1.0'>
    <description>
      xbean-spring provides a schema-driven proprietary namespace
       handler for spring contexts
    </description>
    <size>
      131183
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://geronimo.apache.org/maven/xbean/4.1/xbean-spring
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Apache XBean :: Spring'/>
      <p n='symbolicname' v='org.apache.xbean.spring'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.context'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.support,org.springframework.core.io,org.springframework.web.context.support,org.w3c.dom'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.context.impl'/>
      <p n='uses' v='javax.xml.namespace,org.apache.xbean.spring.context,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.core.io,org.w3c.dom'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.context.v2'/>
      <p n='uses' v='org.apache.xbean.spring.context,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.core.io,org.w3c.dom'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.context.v2c'/>
      <p n='uses' v='org.apache.xbean.spring.context.impl,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context.support,org.w3c.dom'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.generator'/>
      <p n='uses' v='org.apache.tools.ant,org.apache.tools.ant.taskdefs,org.apache.tools.ant.types'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.jndi'/>
      <p n='uses' v='javax.naming,javax.naming.spi,org.springframework.beans.factory,org.springframework.core.io'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.apache.xbean.spring.util'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='4.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.qdox)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.qdox
    </require>
    <require extend='false' filter='(&amp;(package=com.thoughtworks.qdox.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.thoughtworks.qdox.model
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.taskdefs)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.taskdefs
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.context.support)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.context.support ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.web.context.support)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.web.context.support ;version=[2.5.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.w3c.dom
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.xml.sax
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=2.5.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.springframework.core ;version=[2.5.0,4.0.0)
    </require>
  </resource>
  <resource id='org.fusesource.hawtbuf.hawtbuf/1.11.0' presentationname='hawtbuf' symbolicname='org.fusesource.hawtbuf.hawtbuf' uri='org.fusesource.hawtbuf.hawtbuf/org.fusesource.hawtbuf.hawtbuf-1.11.0.jar' version='1.11.0'>
    <description>
      HawtBuf: a rich byte buffer library
    </description>
    <size>
      50155
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://fusesource.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hawtbuf'/>
      <p n='symbolicname' v='org.fusesource.hawtbuf.hawtbuf'/>
      <p n='version' t='version' v='1.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtbuf'/>
      <p n='version' t='version' v='1.11.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtbuf.codec'/>
      <p n='uses' v='org.fusesource.hawtbuf'/>
      <p n='version' t='version' v='1.11.0'/>
    </capability>
  </resource>
  <resource id='org.fusesource.hawtdispatch.hawtdispatch/1.19.0' presentationname='hawtdispatch' symbolicname='org.fusesource.hawtdispatch.hawtdispatch' uri='org.fusesource.hawtdispatch.hawtdispatch/org.fusesource.hawtdispatch.hawtdispatch-1.19.0.jar' version='1.19.0'>
    <description>
      HawtDispatch: The libdispatch style API for Java
    </description>
    <size>
      119000
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://fusesource.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hawtdispatch'/>
      <p n='symbolicname' v='org.fusesource.hawtdispatch.hawtdispatch'/>
      <p n='version' t='version' v='1.19.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtdispatch'/>
      <p n='uses' v='org.objectweb.asm'/>
      <p n='version' t='version' v='1.19.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtdispatch.jmx'/>
      <p n='uses' v='javax.management,javax.management.openmbean,org.fusesource.hawtdispatch'/>
      <p n='version' t='version' v='1.19.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.openmbean
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.asm
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.fusesource.hawtdispatch.hawtdispatch/1.21.0' presentationname='hawtdispatch' symbolicname='org.fusesource.hawtdispatch.hawtdispatch' uri='org.fusesource.hawtdispatch.hawtdispatch/org.fusesource.hawtdispatch.hawtdispatch-1.21.0.jar' version='1.21.0'>
    <description>
      HawtDispatch: The libdispatch style API for Java
    </description>
    <size>
      119051
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://fusesource.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hawtdispatch'/>
      <p n='symbolicname' v='org.fusesource.hawtdispatch.hawtdispatch'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtdispatch'/>
      <p n='uses' v='org.objectweb.asm'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtdispatch.jmx'/>
      <p n='uses' v='javax.management,javax.management.openmbean,org.fusesource.hawtdispatch'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.management.openmbean
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.asm
    </require>
    <require extend='false' filter='(&amp;(package=org.osgi.framework)(version&gt;=1.5.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.osgi.framework ;version=[1.5.0,2.0.0)
    </require>
  </resource>
  <resource id='org.fusesource.hawtdispatch.hawtdispatch-transport/1.21.0' presentationname='hawtdispatch-transport' symbolicname='org.fusesource.hawtdispatch.hawtdispatch-transport' uri='org.fusesource.hawtdispatch.hawtdispatch-transport/org.fusesource.hawtdispatch.hawtdispatch-transport-1.21.0.jar' version='1.21.0'>
    <description>
      HawtDispatch Transport: Transport abstractions for HawtDispatch
    </description>
    <size>
      127668
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <documentation>
      http://fusesource.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='hawtdispatch-transport'/>
      <p n='symbolicname' v='org.fusesource.hawtdispatch.hawtdispatch-transport'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtdispatch.transport'/>
      <p n='uses' v='org.fusesource.hawtdispatch.util,org.fusesource.hawtbuf,org.fusesource.hawtdispatch,javax.net.ssl'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.hawtdispatch.util'/>
      <p n='version' t='version' v='1.21.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.hawtbuf)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.fusesource.hawtbuf ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.hawtdispatch)(version&gt;=1.21.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.hawtdispatch ;version=[1.21.0,2.0.0)
    </require>
  </resource>
  <resource id='org.fusesource.stompjms.stompjms-client/1.19.0' presentationname='stompjms-client' symbolicname='org.fusesource.stompjms.stompjms-client' uri='org.fusesource.stompjms.stompjms-client/org.fusesource.stompjms.stompjms-client-1.19.0.jar' version='1.19.0'>
    <description>
      STOMP-JMS is a JMS implementation using STOMP as the wire protocol
    </description>
    <size>
      213177
    </size>
    <license>
      http://www.opensource.org/licenses/cddl1
    </license>
    <documentation>
      http://fusesource.com/
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='stompjms-client'/>
      <p n='symbolicname' v='org.fusesource.stompjms.stompjms-client'/>
      <p n='version' t='version' v='1.19.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.stomp.jms.jndi'/>
      <p n='uses' v='javax.naming,javax.jms,org.fusesource.stomp.jms,javax.naming.spi'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.stomp.jms.util'/>
      <p n='uses' v='javax.jms,org.fusesource.hawtbuf,org.fusesource.stomp.client,org.fusesource.stomp.jms,org.fusesource.stomp.jms.message,org.fusesource.stomp.codec,javax.net.ssl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.stomp.jms'/>
      <p n='uses' v='org.apache.activemq.apollo.selector,javax.jms,org.fusesource.hawtbuf,org.fusesource.stomp.client,org.apache.activemq.apollo.filter,org.fusesource.stomp.jms.jndi,org.fusesource.hawtdispatch,org.fusesource.stomp.jms.util,org.fusesource.stomp.jms.message,org.fusesource.hawtdispatch.transport,org.fusesource.stomp.codec,javax.net.ssl'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.stomp.jms.message'/>
      <p n='uses' v='javax.jms,org.fusesource.stomp.jms.util,org.fusesource.stomp.jms,org.fusesource.stomp.codec,org.fusesource.hawtbuf,org.fusesource.stomp.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.stomp.codec'/>
      <p n='uses' v='org.fusesource.hawtdispatch.util,org.fusesource.hawtdispatch.transport,org.fusesource.hawtbuf,org.fusesource.stomp.client'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.fusesource.stomp.client'/>
      <p n='uses' v='org.fusesource.hawtdispatch,org.fusesource.hawtdispatch.transport,org.fusesource.stomp.codec,javax.net.ssl,org.fusesource.hawtbuf'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.jms
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming.spi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming.spi
    </require>
    <require extend='false' filter='(&amp;(package=javax.net.ssl)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.net.ssl
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activemq.apollo.filter)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq.apollo.filter
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.activemq.apollo.selector)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.activemq.apollo.selector
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.hawtbuf)(version&gt;=1.9.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.hawtbuf ;version=1.9.0
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.hawtdispatch)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.hawtdispatch
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.hawtdispatch.transport)(version&gt;=1.20.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.hawtdispatch.transport ;version=1.20.0
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.hawtdispatch.util)(version&gt;=1.20.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.hawtdispatch.util ;version=1.20.0
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.stomp.client)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.stomp.client
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.stomp.codec)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.stomp.codec
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.stomp.jms)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.stomp.jms
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.stomp.jms.jndi)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.stomp.jms.jndi
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.stomp.jms.message)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.stomp.jms.message
    </require>
    <require extend='false' filter='(&amp;(package=org.fusesource.stomp.jms.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package org.fusesource.stomp.jms.util
    </require>
  </resource>
  <resource id='org.glassfish.javax.ejb/3.1.1' presentationname='javax.ejb API v.3.1' symbolicname='org.glassfish.javax.ejb' uri='org.glassfish.javax.ejb/org.glassfish.javax.ejb-3.1.1.jar' version='3.1.1'>
    <description>
      Project GlassFish Enterprise JavaBean API
    </description>
    <size>
      64193
    </size>
    <license>
      https://glassfish.dev.java.net/nonav/public/CDDL+GPL.html
    </license>
    <documentation>
      https://glassfish.dev.java.net
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='javax.ejb API v.3.1'/>
      <p n='symbolicname' v='org.glassfish.javax.ejb'/>
      <p n='version' t='version' v='3.1.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb'/>
      <p n='uses' v='javax.transaction,javax.xml.rpc.handler'/>
      <p n='version' t='version' v='3.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb.spi'/>
      <p n='uses' v='javax.ejb,javax.ejb.embeddable'/>
      <p n='version' t='version' v='3.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.ejb.embeddable'/>
      <p n='uses' v='javax.naming,javax.ejb,javax.ejb.spi'/>
      <p n='version' t='version' v='3.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.interceptor'/>
      <p n='version' t='version' v='3.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.xml.rpc.handler'/>
      <p n='uses' v='javax.xml.namespace'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=3.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.ejb ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb.embeddable)(version&gt;=3.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.ejb.embeddable ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb.spi)(version&gt;=3.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.ejb.spi ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.interceptor)(version&gt;=3.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.interceptor ;version=3.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.naming
    </require>
    <require extend='false' filter='(&amp;(package=javax.transaction)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.transaction ;version=1.1.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.namespace
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.rpc.handler)(version&gt;=1.1.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.rpc.handler ;version=1.1.0
    </require>
  </resource>
  <resource id='org.glassfish.main.transaction.javax.transaction/3.1.2.2' presentationname='javax.transaction API v.1.1' symbolicname='org.glassfish.main.transaction.javax.transaction' uri='org.glassfish.main.transaction.javax.transaction/org.glassfish.main.transaction.javax.transaction-3.1.2.jar' version='3.1.2.2'>
    <description>
      Java.net - The Source for Java Technology Collaboration
    </description>
    <size>
      23951
    </size>
    <license>
      http://glassfish.java.net/nonav/public/CDDL+GPL.html
    </license>
    <documentation>
      http://glassfish.java.net
    </documentation>
    <capability name='fragment'>
      <p n='host' v='system.bundle'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='bundle'>
      <p n='host' v='system.bundle'/>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='javax.transaction API v.1.1'/>
      <p n='symbolicname' v='org.glassfish.main.transaction.javax.transaction'/>
      <p n='version' t='version' v='3.1.2.2'/>
      <p n='version' t='version' v='0.0.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction'/>
      <p n='uses' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='javax.transaction.xa'/>
      <p n='version' t='version' v='1.1.0'/>
    </capability>
    <require extend='true' filter='(&amp;(symbolicname=system.bundle)(version&gt;=0.0.0))' multiple='false' name='bundle' optional='false'>
      Required Host system.bundle
    </require>
  </resource>
  <resource id='org.mockito.mockito-core/1.9.5' presentationname='Mockito Mock Library for Java. Core bundle requires Hamcrest-core and Objenesis. ' symbolicname='org.mockito.mockito-core' uri='org.mockito.mockito-core/org.mockito.mockito-core-1.9.5.jar' version='1.9.5'>
    <size>
      1500011
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Mockito Mock Library for Java. Core bundle requires Hamcrest-core and Objenesis. '/>
      <p n='symbolicname' v='org.mockito.mockito-core'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions'/>
      <p n='uses' v='org.mockito.invocation,org.mockito.exceptions.base,org.mockito.mock,org.mockito.listeners,org.mockito.exceptions.misusing,org.mockito.exceptions.verification'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.stacktrace'/>
      <p n='uses' v='org.mockito'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.stubbing.answers'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.listeners'/>
      <p n='uses' v='org.mockito.invocation'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.runners'/>
      <p n='uses' v='org.junit.runner,org.junit.runner.notification,org.junit.runner.manipulation'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.base'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.plugins'/>
      <p n='uses' v='org.mockito.mock,org.mockito,org.mockito.invocation,org.mockito.exceptions.stacktrace'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.mock'/>
      <p n='uses' v='org.mockito,org.mockito.stubbing'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.verification'/>
      <p n='uses' v='org.mockito.exceptions.base'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.configuration'/>
      <p n='uses' v='org.mockito,org.mockito.stubbing'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.invocation'/>
      <p n='uses' v='org.mockito,org.mockito.exceptions'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.verification.junit'/>
      <p n='uses' v='junit.framework'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito'/>
      <p n='uses' v='org.mockito.stubbing,org.hamcrest,org.mockito.verification,org.mockito.listeners,org.mockito.exceptions.base,org.mockito.exceptions,org.mockito.configuration,org.mockito.invocation'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.exceptions.misusing'/>
      <p n='uses' v='org.mockito.exceptions.base'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.verification'/>
      <p n='uses' v='org.mockito.exceptions'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.mockito.stubbing'/>
      <p n='uses' v='org.mockito.invocation'/>
      <p n='version' t='version' v='1.9.5'/>
    </capability>
    <require extend='false' filter='(&amp;(package=junit.framework)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package junit.framework
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types
    </require>
    <require extend='false' filter='(&amp;(package=org.hamcrest)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.hamcrest ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.junit)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.internal.runners)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.internal.runners
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner.manipulation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner.manipulation
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runner.notification)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runner.notification
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runners)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runners
    </require>
    <require extend='false' filter='(&amp;(package=org.junit.runners.model)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.junit.runners.model
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.configuration)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.configuration ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.base)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.base ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.misusing)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.misusing ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.stacktrace)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.stacktrace ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.verification)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.verification ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.exceptions.verification.junit)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.exceptions.verification.junit ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.invocation)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.invocation ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.listeners)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.listeners ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.mock)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.mock ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.plugins)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.plugins ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.runners)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.runners ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.stubbing)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.stubbing ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.stubbing.answers)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.stubbing.answers ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.mockito.verification)(version&gt;=1.9.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.mockito.verification ;version=[1.9.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objenesis)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.objenesis ;version=[1.0.0,2.0.0)
    </require>
  </resource>
  <resource id='org.objectweb.asm/3.3.1.v201105211655' presentationname='ASM' symbolicname='org.objectweb.asm' uri='org.objectweb.asm/org.objectweb.asm-3.3.1.jar' version='3.3.1.v201105211655'>
    <size>
      228617
    </size>
    <documentation>
      http://asm.objectweb.org
    </documentation>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='ASM'/>
      <p n='symbolicname' v='org.objectweb.asm'/>
      <p n='version' t='version' v='3.3.1.v201105211655'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.signature'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.commons'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.tree.analysis'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.util'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objectweb.asm.xml'/>
      <p n='version' t='version' v='3.3.1'/>
    </capability>
    <require extend='false' filter='(|(ee=J2SE-1.3))' multiple='false' name='ee' optional='false'>
      Execution Environment (|(ee=J2SE-1.3))
    </require>
  </resource>
  <resource id='org.objenesis/1.4.0' presentationname='Objenesis' symbolicname='org.objenesis' uri='org.objenesis/org.objenesis-1.4.0.jar' version='1.4.0'>
    <description>
      A library for instantiating Java objects
    </description>
    <size>
      45172
    </size>
    <license>
      http://www.apache.org/licenses/LICENSE-2.0.txt
    </license>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Objenesis'/>
      <p n='symbolicname' v='org.objenesis'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator.android'/>
      <p n='uses' v='org.objenesis,org.objenesis.instantiator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator.basic'/>
      <p n='uses' v='org.objenesis,org.objenesis.instantiator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator.gcj'/>
      <p n='uses' v='org.objenesis,org.objenesis.instantiator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator.jrockit'/>
      <p n='uses' v='COM.jrockit.reflect,org.objenesis,org.objenesis.instantiator,jrockit.vm'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator.perc'/>
      <p n='uses' v='org.objenesis,org.objenesis.instantiator'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.instantiator.sun'/>
      <p n='uses' v='org.objenesis,org.objenesis.instantiator,sun.reflect'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis'/>
      <p n='uses' v='org.objenesis.instantiator,org.objenesis.strategy'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.objenesis.strategy'/>
      <p n='uses' v='org.objenesis.instantiator,org.objenesis.instantiator.perc,org.objenesis,org.objenesis.instantiator.android,org.objenesis.instantiator.basic,org.objenesis.instantiator.gcj,org.objenesis.instantiator.sun,org.objenesis.instantiator.jrockit'/>
      <p n='version' t='version' v='1.4.0'/>
    </capability>
    <require extend='false' filter='(&amp;(package=COM.jrockit.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package COM.jrockit.reflect
    </require>
    <require extend='false' filter='(&amp;(package=COM.newmonics.PercClassloader)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package COM.newmonics.PercClassloader
    </require>
    <require extend='false' filter='(&amp;(package=jrockit.vm)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package jrockit.vm
    </require>
    <require extend='false' filter='(&amp;(package=sun.reflect)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package sun.reflect
    </require>
  </resource>
  <resource id='org.springframework.beans/3.2.5.RELEASE' presentationname='Spring Beans' symbolicname='org.springframework.beans' uri='org.springframework.beans/org.springframework.beans-3.2.5.jar' version='3.2.5.RELEASE'>
    <size>
      617548
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Beans'/>
      <p n='symbolicname' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.annotation'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory'/>
      <p n='uses' v='org.springframework.beans'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.access.el'/>
      <p n='uses' v='javax.el,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.annotation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.wiring,org.springframework.core,org.springframework.core.type'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.config'/>
      <p n='uses' v='javax.inject,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.support,org.springframework.core,org.springframework.core.convert,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.parsing'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.io'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.serviceloader'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.support'/>
      <p n='uses' v='javax.inject,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.cglib.proxy,org.springframework.core,org.springframework.core.convert,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.wiring'/>
      <p n='uses' v='org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.factory.xml'/>
      <p n='uses' v='javax.xml.parsers,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.w3c.dom,org.xml.sax'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.propertyeditors'/>
      <p n='uses' v='org.springframework.core.io'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.beans.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.core.env,org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.el)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.el ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.inject)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.inject ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.parsers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.parsers ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.cglib.proxy)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.cglib.proxy ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.env)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.env ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.context/3.2.5.RELEASE' presentationname='Spring Context' symbolicname='org.springframework.context' uri='org.springframework.context/org.springframework.context-3.2.5.jar' version='3.2.5.RELEASE'>
    <size>
      878806
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Context'/>
      <p n='symbolicname' v='org.springframework.context'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.annotation'/>
      <p n='uses' v='javax.annotation,org.springframework.beans.factory.annotation,org.springframework.cache,org.springframework.cache.interceptor,org.springframework.context.annotation,org.springframework.core.type'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.concurrent'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.cache'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.cache.interceptor,org.w3c.dom'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.interceptor'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.cache,org.springframework.core,org.springframework.expression,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cache.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.cache'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.access'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.context,org.springframework.jndi'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.annotation'/>
      <p n='uses' v='javax.management,org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.beans.factory.parsing,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.cglib.proxy,org.springframework.context,org.springframework.context.support,org.springframework.core,org.springframework.core.annotation,org.springframework.core.env,org.springframework.core.io,org.springframework.core.type,org.springframework.core.type.classreading,org.springframework.core.type.filter,org.springframework.instrument.classloading,org.springframework.jmx.export.annotation,org.springframework.jmx.support,org.springframework.stereotype,org.w3c.dom'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.event'/>
      <p n='uses' v='org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.context,org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.expression'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.expression,org.springframework.expression.spel.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.i18n'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.support'/>
      <p n='uses' v='org.apache.commons.logging,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.core,org.springframework.core.convert,org.springframework.core.convert.support,org.springframework.core.env,org.springframework.core.io,org.springframework.core.io.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.context.weaving'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.core,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.access'/>
      <p n='uses' v='javax.ejb,javax.naming,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.config'/>
      <p n='uses' v='org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.interceptor'/>
      <p n='uses' v='javax.annotation,javax.ejb,javax.interceptor,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.beans.factory.annotation'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ejb.support'/>
      <p n='uses' v='javax.ejb,javax.jms,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.access,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format'/>
      <p n='uses' v='org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.annotation'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime'/>
      <p n='uses' v='org.springframework.context,org.springframework.core.convert.converter,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.datetime.joda'/>
      <p n='uses' v='org.joda.time,org.joda.time.format,org.springframework.beans.factory,org.springframework.context,org.springframework.core.convert.converter,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.number'/>
      <p n='uses' v='org.springframework.context,org.springframework.format,org.springframework.format.annotation,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.format.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.context,org.springframework.core.convert,org.springframework.core.convert.converter,org.springframework.core.convert.support,org.springframework.format,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.glassfish'/>
      <p n='uses' v='javax.persistence.spi,org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.jboss'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.oc4j'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.weblogic'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.instrument.classloading.websphere'/>
      <p n='uses' v='org.springframework.instrument.classloading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.access'/>
      <p n='uses' v='javax.management,javax.management.remote,org.aopalliance.intercept,org.springframework.beans.factory,org.springframework.core,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx,org.springframework.jmx.export.assembler,org.springframework.jmx.export.naming,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.annotation'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.jmx.export,org.springframework.jmx.export.metadata,org.springframework.jmx.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.assembler'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.beans.factory,org.springframework.core,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.metadata'/>
      <p n='uses' v='javax.management.modelmbean,org.springframework.jmx,org.springframework.jmx.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.naming'/>
      <p n='uses' v='javax.management,org.springframework.beans.factory,org.springframework.core.io,org.springframework.jmx.export.metadata'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.export.notification'/>
      <p n='uses' v='javax.management,javax.management.modelmbean,org.springframework.beans.factory,org.springframework.jmx'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jmx.support'/>
      <p n='uses' v='javax.management,javax.management.remote,org.springframework.aop.target,org.springframework.beans.factory,org.springframework.jmx'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.springframework.aop,org.springframework.beans.factory,org.springframework.core,org.springframework.core.env'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.jndi.support'/>
      <p n='uses' v='org.springframework.beans,org.springframework.beans.factory,org.springframework.jndi'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.rmi'/>
      <p n='uses' v='javax.naming,org.aopalliance.intercept,org.omg.CORBA,org.springframework.beans.factory,org.springframework.core,org.springframework.jndi,org.springframework.remoting,org.springframework.remoting.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.soap'/>
      <p n='uses' v='javax.xml.namespace,org.springframework.remoting'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.remoting.support'/>
      <p n='uses' v='com.sun.net.httpserver,org.aopalliance.intercept,org.springframework.beans.factory'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.task'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.annotation'/>
      <p n='uses' v='org.aopalliance.aop,org.springframework.aop,org.springframework.aop.framework,org.springframework.aop.interceptor,org.springframework.aop.support,org.springframework.beans.factory,org.springframework.beans.factory.annotation,org.springframework.beans.factory.config,org.springframework.context,org.springframework.context.annotation,org.springframework.context.event,org.springframework.core,org.springframework.core.type,org.springframework.scheduling.config,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.backportconcurrent'/>
      <p n='uses' v='edu.emory.mathcs.backport.java.util.concurrent,org.springframework.beans.factory,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.concurrent'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.config'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.springframework.context,org.springframework.context.event,org.springframework.core.task,org.springframework.scheduling,org.springframework.scheduling.support,org.w3c.dom'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.support'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.beans.support,org.springframework.scheduling,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scheduling.timer'/>
      <p n='uses' v='org.springframework.beans.factory,org.springframework.scheduling,org.springframework.scheduling.support'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.bsh'/>
      <p n='uses' v='bsh,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.config'/>
      <p n='uses' v='org.springframework.beans.factory.config,org.springframework.beans.factory.support,org.springframework.beans.factory.xml,org.w3c.dom'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.groovy'/>
      <p n='uses' v='groovy.lang,org.springframework.beans,org.springframework.beans.factory,org.springframework.scripting'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.jruby'/>
      <p n='uses' v='org.jruby,org.jruby.ast,org.jruby.exceptions,org.jruby.runtime.builtin,org.springframework.beans.factory,org.springframework.core,org.springframework.scripting'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.scripting.support'/>
      <p n='uses' v='org.springframework.aop,org.springframework.aop.target.dynamic,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core,org.springframework.core.io,org.springframework.scripting'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.stereotype'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context'/>
      <p n='uses' v='org.springframework.context'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.ui.context.support'/>
      <p n='uses' v='org.springframework.context,org.springframework.ui.context'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation'/>
      <p n='uses' v='org.springframework.beans,org.springframework.context.support,org.springframework.core,org.springframework.core.convert'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.annotation'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.beanvalidation'/>
      <p n='uses' v='javax.validation,javax.validation.metadata,org.aopalliance.intercept,org.hibernate.validator.resourceloading,org.springframework.aop.framework,org.springframework.beans,org.springframework.beans.factory,org.springframework.beans.factory.config,org.springframework.context,org.springframework.core.io,org.springframework.validation'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.validation.support'/>
      <p n='uses' v='org.springframework.ui'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=bsh)(version&gt;=2.0.0.b4)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package bsh ;version=[2.0.0.b4,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=com.ibm.websphere.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.ibm.websphere.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=com.sun.net.httpserver)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package com.sun.net.httpserver ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=edu.emory.mathcs.backport.java.util.concurrent)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package edu.emory.mathcs.backport.java.util.concurrent
       ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=groovy.lang)(version&gt;=1.8.8)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package groovy.lang ;version=[1.8.8,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.annotation)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.annotation ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.ejb)(version&gt;=2.1.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.ejb ;version=[2.1.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.inject)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.inject ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.interceptor)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.interceptor ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.jms)(version&gt;=1.1.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.jms ;version=[1.1.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.management)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.modelmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.modelmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.openmbean)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.openmbean ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.management.remote)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.management.remote ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.naming)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.naming ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.persistence.spi)(version&gt;=1.0.0)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.persistence.spi ;version=[1.0.0,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.rmi)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.rmi ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.bootstrap)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.bootstrap ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.validation.metadata)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package javax.validation.metadata ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.ws)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.ws ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.aop)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.aop ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aopalliance.intercept)(version&gt;=1.0.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aopalliance.intercept ;version=[1.0.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.loadtime)(version&gt;=1.7.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.loadtime ;version=[1.7.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.codehaus.groovy.control)(version&gt;=1.6.3)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.codehaus.groovy.control ;version=[1.6.3,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.messageinterpolation)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.messageinterpolation
       ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.method)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.method ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.hibernate.validator.resourceloading)(version&gt;=4.0.0)(!(version&gt;=5.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.hibernate.validator.resourceloading ;version=[4.0.0,5.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.joda.time.format)(version&gt;=1.6.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.joda.time.format ;version=[1.6.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby)(version&gt;=1.6.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby ;version=[1.6.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.ast)(version&gt;=1.6.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.ast ;version=[1.6.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.exceptions)(version&gt;=1.6.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.exceptions ;version=[1.6.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.javasupport)(version&gt;=1.6.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.javasupport ;version=[1.6.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime)(version&gt;=1.6.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime ;version=[1.6.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jruby.runtime.builtin)(version&gt;=1.6.5.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jruby.runtime.builtin ;version=[1.6.5.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.omg.CORBA)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.omg.CORBA ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.config)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.config ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.framework.adapter)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.framework.adapter ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.interceptor)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.interceptor ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.scope)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.scope ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.support.annotation)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.support.annotation ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.aop.target.dynamic)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.aop.target.dynamic ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.asm ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.annotation)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.annotation ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.access)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.access ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.annotation)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.annotation
       ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.config)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.config ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.parsing)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.parsing ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.factory.xml)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.factory.xml ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.propertyeditors)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.propertyeditors ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.beans.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.beans.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.cglib.core)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.cglib.core ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.cglib.proxy)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.cglib.proxy ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.annotation)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.annotation ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.converter)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.converter ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.convert.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.convert.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.env)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.env ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.io.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.io.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.task.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.task.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.classreading)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.classreading ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.core.type.filter)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.core.type.filter ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.standard)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.standard
       ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.expression.spel.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.expression.spel.support
       ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.instrument)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.springframework.instrument ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.orm.jpa.support)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.orm.jpa.support ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.util.xml)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='false'>
      Import package org.springframework.util.xml ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
  </resource>
  <resource id='org.springframework.core/3.2.5.RELEASE' presentationname='Spring Core' symbolicname='org.springframework.core' uri='org.springframework.core/org.springframework.core-3.2.5.jar' version='3.2.5.RELEASE'>
    <size>
      882066
    </size>
    <capability name='bundle'>
      <p n='manifestversion' v='2'/>
      <p n='presentationname' v='Spring Core'/>
      <p n='symbolicname' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.commons'/>
      <p n='uses' v='org.springframework.asm,org.springframework.asm.signature,org.springframework.asm.tree'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.signature'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.asm.util'/>
      <p n='uses' v='org.springframework.asm'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.beans'/>
      <p n='uses' v='org.springframework.asm,org.springframework.cglib.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.core'/>
      <p n='uses' v='org.springframework.asm,org.springframework.cglib.transform'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.proxy'/>
      <p n='uses' v='org.springframework.asm,org.springframework.cglib.core,org.springframework.cglib.reflect'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.reflect'/>
      <p n='uses' v='org.springframework.asm,org.springframework.cglib.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.transform'/>
      <p n='uses' v='org.apache.tools.ant,org.apache.tools.ant.types,org.springframework.asm,org.springframework.cglib.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.transform.impl'/>
      <p n='uses' v='org.springframework.asm,org.springframework.cglib.core,org.springframework.cglib.transform'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.cglib.util'/>
      <p n='uses' v='org.springframework.asm,org.springframework.cglib.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core'/>
      <p n='uses' v='org.springframework.asm,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.annotation'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert'/>
      <p n='uses' v='org.springframework.core'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.converter'/>
      <p n='uses' v='org.springframework.core.convert'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.convert.support'/>
      <p n='uses' v='org.springframework.core.convert,org.springframework.core.convert.converter'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.enums'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.env'/>
      <p n='uses' v='joptsimple,org.apache.commons.logging,org.springframework.core.convert,org.springframework.core.convert.support,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io'/>
      <p n='uses' v='org.springframework.core.env'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.io.support'/>
      <p n='uses' v='org.springframework.core.env,org.springframework.core.io,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.serializer.support'/>
      <p n='uses' v='org.springframework.core,org.springframework.core.convert.converter,org.springframework.core.serializer'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.style'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task'/>
      <p n='uses' v='org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.task.support'/>
      <p n='uses' v='org.springframework.core.task'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.classreading'/>
      <p n='uses' v='org.springframework.asm,org.springframework.core.annotation,org.springframework.core.io,org.springframework.core.type,org.springframework.util'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.core.type.filter'/>
      <p n='uses' v='org.springframework.core.type,org.springframework.core.type.classreading'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util'/>
      <p n='uses' v='org.apache.commons.logging'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.comparator'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <capability name='package'>
      <p n='package' v='org.springframework.util.xml'/>
      <p n='uses' v='javax.xml.namespace,javax.xml.stream,javax.xml.stream.util,javax.xml.transform,javax.xml.transform.sax,org.apache.commons.logging,org.w3c.dom,org.xml.sax,org.xml.sax.ext'/>
      <p n='version' t='version' v='3.2.5.RELEASE'/>
    </capability>
    <require extend='false' filter='(&amp;(package=javax.xml.namespace)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.namespace ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.stream ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.events)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.events ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.stream.util)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.stream.util ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package javax.xml.transform ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=javax.xml.transform.stax)(version&gt;=0.0.0))' multiple='false' name='package' optional='false'>
      Import package javax.xml.transform.stax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=joptsimple)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package joptsimple ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.beans)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.beans ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.core)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.core ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.proxy)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.proxy ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.reflect)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.reflect ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.transform)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.transform ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=net.sf.cglib.util)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package net.sf.cglib.util ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.commons.logging)(version&gt;=1.1.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='false'>
      Import package org.apache.commons.logging ;version=[1.1.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.log4j.xml)(version&gt;=1.2.15)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.log4j.xml ;version=[1.2.15,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.apache.tools.ant.types)(version&gt;=1.7.0)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.apache.tools.ant.types ;version=[1.7.0,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.bridge)(version&gt;=1.7.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.bridge ;version=[1.7.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver)(version&gt;=1.7.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver ;version=[1.7.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.bcel)(version&gt;=1.7.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.bcel ;version=[1.7.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.aspectj.weaver.patterns)(version&gt;=1.7.1)(!(version&gt;=2.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.aspectj.weaver.patterns ;version=[1.7.1,2.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.eclipse.core.runtime)(version&gt;=0.0.0)(common=split)(mandatory:&lt;*common))' multiple='false' name='package' optional='true'>
      Import package org.eclipse.core.runtime ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.vfs)(version&gt;=3.0.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.vfs ;version=[3.0.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.jboss.virtual)(version&gt;=2.1.0.GA)(!(version&gt;=3.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.jboss.virtual ;version=[2.1.0.GA,3.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.objectweb.asm)(version&gt;=3.2.0)(!(version&gt;=4.0.0)))' multiple='false' name='package' optional='true'>
      Import package org.objectweb.asm ;version=[3.2.0,4.0.0)
    </require>
    <require extend='false' filter='(&amp;(package=org.springframework.asm.tree)(version&gt;=3.2.5.RELEASE)(version&lt;=3.2.5.RELEASE))' multiple='false' name='package' optional='true'>
      Import package org.springframework.asm.tree ;version=[3.2.5.RELEASE,3.2.5.RELEASE]
    </require>
    <require extend='false' filter='(&amp;(package=org.w3c.dom)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.w3c.dom ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.ext)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.ext ;version=0.0.0
    </require>
    <require extend='false' filter='(&amp;(package=org.xml.sax.helpers)(version&gt;=0.0.0))' multiple='false' name='package' optional='true'>
      Import package org.xml.sax.helpers ;version=0.0.0
    </require>
  </resource>
</repository>